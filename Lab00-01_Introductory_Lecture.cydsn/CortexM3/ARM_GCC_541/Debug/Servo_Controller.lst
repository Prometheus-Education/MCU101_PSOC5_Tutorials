ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Servo_Controller.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Servo_Controller_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Servo_Controller_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Servo_Controller_Enable, %function
  25              	Servo_Controller_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\Servo_Controller.c"
   1:Generated_Source\PSoC5/Servo_Controller.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Servo_Controller.c **** * File Name: Servo_Controller.c
   3:Generated_Source\PSoC5/Servo_Controller.c **** * Version 3.30
   4:Generated_Source\PSoC5/Servo_Controller.c **** *
   5:Generated_Source\PSoC5/Servo_Controller.c **** * Description:
   6:Generated_Source\PSoC5/Servo_Controller.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/Servo_Controller.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/Servo_Controller.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/Servo_Controller.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/Servo_Controller.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/Servo_Controller.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/Servo_Controller.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/Servo_Controller.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/Servo_Controller.c **** *
  15:Generated_Source\PSoC5/Servo_Controller.c **** * Note:
  16:Generated_Source\PSoC5/Servo_Controller.c **** *
  17:Generated_Source\PSoC5/Servo_Controller.c **** *******************************************************************************
  18:Generated_Source\PSoC5/Servo_Controller.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Servo_Controller.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Servo_Controller.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Servo_Controller.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Servo_Controller.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Servo_Controller.c **** 
  24:Generated_Source\PSoC5/Servo_Controller.c **** #include "Servo_Controller.h"
  25:Generated_Source\PSoC5/Servo_Controller.c **** 
  26:Generated_Source\PSoC5/Servo_Controller.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/Servo_Controller.c **** #ifdef Servo_Controller_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/Servo_Controller.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/Servo_Controller.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/Servo_Controller.c **** #endif /* Servo_Controller_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 2


  31:Generated_Source\PSoC5/Servo_Controller.c **** 
  32:Generated_Source\PSoC5/Servo_Controller.c **** uint8 Servo_Controller_initVar = 0u;
  33:Generated_Source\PSoC5/Servo_Controller.c **** 
  34:Generated_Source\PSoC5/Servo_Controller.c **** 
  35:Generated_Source\PSoC5/Servo_Controller.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/Servo_Controller.c **** * Function Name: Servo_Controller_Start
  37:Generated_Source\PSoC5/Servo_Controller.c **** ********************************************************************************
  38:Generated_Source\PSoC5/Servo_Controller.c **** *
  39:Generated_Source\PSoC5/Servo_Controller.c **** * Summary:
  40:Generated_Source\PSoC5/Servo_Controller.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/Servo_Controller.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/Servo_Controller.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/Servo_Controller.c **** *
  44:Generated_Source\PSoC5/Servo_Controller.c **** * Parameters:
  45:Generated_Source\PSoC5/Servo_Controller.c **** *  None
  46:Generated_Source\PSoC5/Servo_Controller.c **** *
  47:Generated_Source\PSoC5/Servo_Controller.c **** * Return:
  48:Generated_Source\PSoC5/Servo_Controller.c **** *  None
  49:Generated_Source\PSoC5/Servo_Controller.c **** *
  50:Generated_Source\PSoC5/Servo_Controller.c **** * Global variables:
  51:Generated_Source\PSoC5/Servo_Controller.c **** *  Servo_Controller_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/Servo_Controller.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/Servo_Controller.c **** *
  54:Generated_Source\PSoC5/Servo_Controller.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/Servo_Controller.c **** void Servo_Controller_Start(void) 
  56:Generated_Source\PSoC5/Servo_Controller.c **** {
  57:Generated_Source\PSoC5/Servo_Controller.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/Servo_Controller.c ****     if(Servo_Controller_initVar == 0u)
  59:Generated_Source\PSoC5/Servo_Controller.c ****     {
  60:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_Init();
  61:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_initVar = 1u;
  62:Generated_Source\PSoC5/Servo_Controller.c ****     }
  63:Generated_Source\PSoC5/Servo_Controller.c ****     Servo_Controller_Enable();
  64:Generated_Source\PSoC5/Servo_Controller.c **** 
  65:Generated_Source\PSoC5/Servo_Controller.c **** }
  66:Generated_Source\PSoC5/Servo_Controller.c **** 
  67:Generated_Source\PSoC5/Servo_Controller.c **** 
  68:Generated_Source\PSoC5/Servo_Controller.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/Servo_Controller.c **** * Function Name: Servo_Controller_Init
  70:Generated_Source\PSoC5/Servo_Controller.c **** ********************************************************************************
  71:Generated_Source\PSoC5/Servo_Controller.c **** *
  72:Generated_Source\PSoC5/Servo_Controller.c **** * Summary:
  73:Generated_Source\PSoC5/Servo_Controller.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/Servo_Controller.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/Servo_Controller.c **** *  Servo_Controller_Start().
  76:Generated_Source\PSoC5/Servo_Controller.c **** *
  77:Generated_Source\PSoC5/Servo_Controller.c **** * Parameters:
  78:Generated_Source\PSoC5/Servo_Controller.c **** *  None
  79:Generated_Source\PSoC5/Servo_Controller.c **** *
  80:Generated_Source\PSoC5/Servo_Controller.c **** * Return:
  81:Generated_Source\PSoC5/Servo_Controller.c **** *  None
  82:Generated_Source\PSoC5/Servo_Controller.c **** *
  83:Generated_Source\PSoC5/Servo_Controller.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/Servo_Controller.c **** void Servo_Controller_Init(void) 
  85:Generated_Source\PSoC5/Servo_Controller.c **** {
  86:Generated_Source\PSoC5/Servo_Controller.c ****     #if (Servo_Controller_UsingFixedFunction || Servo_Controller_UseControl)
  87:Generated_Source\PSoC5/Servo_Controller.c ****         uint8 ctrl;
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 3


  88:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (Servo_Controller_UsingFixedFunction || Servo_Controller_UseControl) */
  89:Generated_Source\PSoC5/Servo_Controller.c **** 
  90:Generated_Source\PSoC5/Servo_Controller.c ****     #if(!Servo_Controller_UsingFixedFunction)
  91:Generated_Source\PSoC5/Servo_Controller.c ****         #if(Servo_Controller_UseStatus)
  92:Generated_Source\PSoC5/Servo_Controller.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/Servo_Controller.c ****             uint8 Servo_Controller_interruptState;
  94:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_UseStatus) */
  95:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (!Servo_Controller_UsingFixedFunction) */
  96:Generated_Source\PSoC5/Servo_Controller.c **** 
  97:Generated_Source\PSoC5/Servo_Controller.c ****     #if (Servo_Controller_UsingFixedFunction)
  98:Generated_Source\PSoC5/Servo_Controller.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_CONTROL |= Servo_Controller_CFG0_MODE;
 100:Generated_Source\PSoC5/Servo_Controller.c ****         #if (Servo_Controller_DeadBand2_4)
 101:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_CONTROL |= Servo_Controller_CFG0_DB;
 102:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_DeadBand2_4) */
 103:Generated_Source\PSoC5/Servo_Controller.c **** 
 104:Generated_Source\PSoC5/Servo_Controller.c ****         ctrl = Servo_Controller_CONTROL3 & ((uint8 )(~Servo_Controller_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_CONTROL3 = ctrl | Servo_Controller_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/Servo_Controller.c **** 
 107:Generated_Source\PSoC5/Servo_Controller.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_RT1 &= ((uint8)(~Servo_Controller_RT1_MASK));
 109:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_RT1 |= Servo_Controller_SYNC;
 110:Generated_Source\PSoC5/Servo_Controller.c **** 
 111:Generated_Source\PSoC5/Servo_Controller.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_RT1 &= ((uint8)(~Servo_Controller_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_RT1 |= Servo_Controller_SYNCDSI_EN;
 114:Generated_Source\PSoC5/Servo_Controller.c **** 
 115:Generated_Source\PSoC5/Servo_Controller.c ****     #elif (Servo_Controller_UseControl)
 116:Generated_Source\PSoC5/Servo_Controller.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/Servo_Controller.c ****         ctrl = Servo_Controller_CONTROL & ((uint8)(~Servo_Controller_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/Servo_Controller.c ****                 ((uint8)(~Servo_Controller_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_CONTROL = ctrl | Servo_Controller_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/Servo_Controller.c ****                                    Servo_Controller_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (Servo_Controller_UsingFixedFunction) */
 122:Generated_Source\PSoC5/Servo_Controller.c **** 
 123:Generated_Source\PSoC5/Servo_Controller.c ****     #if (!Servo_Controller_UsingFixedFunction)
 124:Generated_Source\PSoC5/Servo_Controller.c ****         #if (Servo_Controller_Resolution == 8)
 125:Generated_Source\PSoC5/Servo_Controller.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_AUX_CONTROLDP0 |= (Servo_Controller_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/Servo_Controller.c ****         #else /* (Servo_Controller_Resolution == 16)*/
 128:Generated_Source\PSoC5/Servo_Controller.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_AUX_CONTROLDP0 |= (Servo_Controller_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_AUX_CONTROLDP1 |= (Servo_Controller_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_Resolution == 8) */
 132:Generated_Source\PSoC5/Servo_Controller.c **** 
 133:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_WriteCounter(Servo_Controller_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (!Servo_Controller_UsingFixedFunction) */
 135:Generated_Source\PSoC5/Servo_Controller.c **** 
 136:Generated_Source\PSoC5/Servo_Controller.c ****     Servo_Controller_WritePeriod(Servo_Controller_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/Servo_Controller.c **** 
 138:Generated_Source\PSoC5/Servo_Controller.c ****         #if (Servo_Controller_UseOneCompareMode)
 139:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_WriteCompare(Servo_Controller_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/Servo_Controller.c ****         #else
 141:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_WriteCompare1(Servo_Controller_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_WriteCompare2(Servo_Controller_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_UseOneCompareMode) */
 144:Generated_Source\PSoC5/Servo_Controller.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 4


 145:Generated_Source\PSoC5/Servo_Controller.c ****         #if (Servo_Controller_KillModeMinTime)
 146:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_WriteKillTime(Servo_Controller_MinimumKillTime);
 147:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_KillModeMinTime) */
 148:Generated_Source\PSoC5/Servo_Controller.c **** 
 149:Generated_Source\PSoC5/Servo_Controller.c ****         #if (Servo_Controller_DeadBandUsed)
 150:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_WriteDeadTime(Servo_Controller_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_DeadBandUsed) */
 152:Generated_Source\PSoC5/Servo_Controller.c **** 
 153:Generated_Source\PSoC5/Servo_Controller.c ****     #if (Servo_Controller_UseStatus || Servo_Controller_UsingFixedFunction)
 154:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_SetInterruptMode(Servo_Controller_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (Servo_Controller_UseStatus || Servo_Controller_UsingFixedFunction) */
 156:Generated_Source\PSoC5/Servo_Controller.c **** 
 157:Generated_Source\PSoC5/Servo_Controller.c ****     #if (Servo_Controller_UsingFixedFunction)
 158:Generated_Source\PSoC5/Servo_Controller.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_GLOBAL_ENABLE |= Servo_Controller_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/Servo_Controller.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_CONTROL2 |= Servo_Controller_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/Servo_Controller.c ****     #else
 163:Generated_Source\PSoC5/Servo_Controller.c ****         #if(Servo_Controller_UseStatus)
 164:Generated_Source\PSoC5/Servo_Controller.c **** 
 165:Generated_Source\PSoC5/Servo_Controller.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/Servo_Controller.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/Servo_Controller.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_STATUS_AUX_CTRL |= Servo_Controller_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/Servo_Controller.c **** 
 171:Generated_Source\PSoC5/Servo_Controller.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/Servo_Controller.c ****             CyExitCriticalSection(Servo_Controller_interruptState);
 173:Generated_Source\PSoC5/Servo_Controller.c **** 
 174:Generated_Source\PSoC5/Servo_Controller.c ****             /* Clear the FIFO to enable the Servo_Controller_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/Servo_Controller.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_ClearFIFO();
 177:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_UseStatus) */
 178:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (Servo_Controller_UsingFixedFunction) */
 179:Generated_Source\PSoC5/Servo_Controller.c **** }
 180:Generated_Source\PSoC5/Servo_Controller.c **** 
 181:Generated_Source\PSoC5/Servo_Controller.c **** 
 182:Generated_Source\PSoC5/Servo_Controller.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/Servo_Controller.c **** * Function Name: Servo_Controller_Enable
 184:Generated_Source\PSoC5/Servo_Controller.c **** ********************************************************************************
 185:Generated_Source\PSoC5/Servo_Controller.c **** *
 186:Generated_Source\PSoC5/Servo_Controller.c **** * Summary:
 187:Generated_Source\PSoC5/Servo_Controller.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/Servo_Controller.c **** *
 189:Generated_Source\PSoC5/Servo_Controller.c **** * Parameters:
 190:Generated_Source\PSoC5/Servo_Controller.c **** *  None
 191:Generated_Source\PSoC5/Servo_Controller.c **** *
 192:Generated_Source\PSoC5/Servo_Controller.c **** * Return:
 193:Generated_Source\PSoC5/Servo_Controller.c **** *  None
 194:Generated_Source\PSoC5/Servo_Controller.c **** *
 195:Generated_Source\PSoC5/Servo_Controller.c **** * Side Effects:
 196:Generated_Source\PSoC5/Servo_Controller.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/Servo_Controller.c **** *
 198:Generated_Source\PSoC5/Servo_Controller.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/Servo_Controller.c **** void Servo_Controller_Enable(void) 
 200:Generated_Source\PSoC5/Servo_Controller.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/Servo_Controller.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/Servo_Controller.c ****     #if (Servo_Controller_UsingFixedFunction)
 203:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_GLOBAL_ENABLE |= Servo_Controller_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_GLOBAL_STBY_ENABLE |= Servo_Controller_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (Servo_Controller_UsingFixedFunction) */
 206:Generated_Source\PSoC5/Servo_Controller.c **** 
 207:Generated_Source\PSoC5/Servo_Controller.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/Servo_Controller.c ****     #if (Servo_Controller_UseControl || Servo_Controller_UsingFixedFunction)
 209:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_CONTROL |= Servo_Controller_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7A650040 		.word	1073767802
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	Servo_Controller_Enable, .-Servo_Controller_Enable
  46              		.section	.text.Servo_Controller_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	Servo_Controller_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	Servo_Controller_Stop, %function
  52              	Servo_Controller_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (Servo_Controller_UseControl || Servo_Controller_UsingFixedFunction) */
 211:Generated_Source\PSoC5/Servo_Controller.c **** }
 212:Generated_Source\PSoC5/Servo_Controller.c **** 
 213:Generated_Source\PSoC5/Servo_Controller.c **** 
 214:Generated_Source\PSoC5/Servo_Controller.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/Servo_Controller.c **** * Function Name: Servo_Controller_Stop
 216:Generated_Source\PSoC5/Servo_Controller.c **** ********************************************************************************
 217:Generated_Source\PSoC5/Servo_Controller.c **** *
 218:Generated_Source\PSoC5/Servo_Controller.c **** * Summary:
 219:Generated_Source\PSoC5/Servo_Controller.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/Servo_Controller.c **** *  interrupts.
 221:Generated_Source\PSoC5/Servo_Controller.c **** *
 222:Generated_Source\PSoC5/Servo_Controller.c **** * Parameters:
 223:Generated_Source\PSoC5/Servo_Controller.c **** *  None
 224:Generated_Source\PSoC5/Servo_Controller.c **** *
 225:Generated_Source\PSoC5/Servo_Controller.c **** * Return:
 226:Generated_Source\PSoC5/Servo_Controller.c **** *  None
 227:Generated_Source\PSoC5/Servo_Controller.c **** *
 228:Generated_Source\PSoC5/Servo_Controller.c **** * Side Effects:
 229:Generated_Source\PSoC5/Servo_Controller.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/Servo_Controller.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/Servo_Controller.c **** *
 232:Generated_Source\PSoC5/Servo_Controller.c **** *******************************************************************************/
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 6


 233:Generated_Source\PSoC5/Servo_Controller.c **** void Servo_Controller_Stop(void) 
 234:Generated_Source\PSoC5/Servo_Controller.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/Servo_Controller.c ****     #if (Servo_Controller_UseControl || Servo_Controller_UsingFixedFunction)
 236:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_CONTROL &= ((uint8)(~Servo_Controller_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7A650040 		.word	1073767802
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	Servo_Controller_Stop, .-Servo_Controller_Stop
  72              		.section	.text.Servo_Controller_WriteCounter,"ax",%progbits
  73              		.align	2
  74              		.global	Servo_Controller_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	Servo_Controller_WriteCounter, %function
  78              	Servo_Controller_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (Servo_Controller_UseControl || Servo_Controller_UsingFixedFunction) */
 238:Generated_Source\PSoC5/Servo_Controller.c **** 
 239:Generated_Source\PSoC5/Servo_Controller.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/Servo_Controller.c ****     #if (Servo_Controller_UsingFixedFunction)
 241:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_GLOBAL_ENABLE &= ((uint8)(~Servo_Controller_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_GLOBAL_STBY_ENABLE &= ((uint8)(~Servo_Controller_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (Servo_Controller_UsingFixedFunction) */
 244:Generated_Source\PSoC5/Servo_Controller.c **** }
 245:Generated_Source\PSoC5/Servo_Controller.c **** 
 246:Generated_Source\PSoC5/Servo_Controller.c **** #if (Servo_Controller_UseOneCompareMode)
 247:Generated_Source\PSoC5/Servo_Controller.c ****     #if (Servo_Controller_CompareMode1SW)
 248:Generated_Source\PSoC5/Servo_Controller.c **** 
 249:Generated_Source\PSoC5/Servo_Controller.c **** 
 250:Generated_Source\PSoC5/Servo_Controller.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/Servo_Controller.c ****         * Function Name: Servo_Controller_SetCompareMode
 252:Generated_Source\PSoC5/Servo_Controller.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/Servo_Controller.c ****         *
 254:Generated_Source\PSoC5/Servo_Controller.c ****         * Summary:
 255:Generated_Source\PSoC5/Servo_Controller.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/Servo_Controller.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/Servo_Controller.c ****         *
 258:Generated_Source\PSoC5/Servo_Controller.c ****         * Parameters:
 259:Generated_Source\PSoC5/Servo_Controller.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/Servo_Controller.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/Servo_Controller.c ****         *
 262:Generated_Source\PSoC5/Servo_Controller.c ****         * Return:
 263:Generated_Source\PSoC5/Servo_Controller.c ****         *  None
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 7


 264:Generated_Source\PSoC5/Servo_Controller.c ****         *
 265:Generated_Source\PSoC5/Servo_Controller.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/Servo_Controller.c ****         void Servo_Controller_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/Servo_Controller.c ****         {
 268:Generated_Source\PSoC5/Servo_Controller.c ****             #if(Servo_Controller_UsingFixedFunction)
 269:Generated_Source\PSoC5/Servo_Controller.c **** 
 270:Generated_Source\PSoC5/Servo_Controller.c ****                 #if(0 != Servo_Controller_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/Servo_Controller.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << Servo_Controller_CTRL_
 272:Generated_Source\PSoC5/Servo_Controller.c ****                 #else
 273:Generated_Source\PSoC5/Servo_Controller.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/Servo_Controller.c ****                 #endif /* (0 != Servo_Controller_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/Servo_Controller.c **** 
 276:Generated_Source\PSoC5/Servo_Controller.c ****                 Servo_Controller_CONTROL3 &= ((uint8)(~Servo_Controller_CTRL_CMPMODE1_MASK)); /*Cle
 277:Generated_Source\PSoC5/Servo_Controller.c ****                 Servo_Controller_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/Servo_Controller.c **** 
 279:Generated_Source\PSoC5/Servo_Controller.c ****             #elif (Servo_Controller_UseControl)
 280:Generated_Source\PSoC5/Servo_Controller.c **** 
 281:Generated_Source\PSoC5/Servo_Controller.c ****                 #if(0 != Servo_Controller_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/Servo_Controller.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << Servo_Controller_CTRL
 283:Generated_Source\PSoC5/Servo_Controller.c ****                                                 Servo_Controller_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/Servo_Controller.c ****                 #else
 285:Generated_Source\PSoC5/Servo_Controller.c ****                     uint8 comparemode1masked = comparemode & Servo_Controller_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/Servo_Controller.c ****                 #endif /* (0 != Servo_Controller_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/Servo_Controller.c **** 
 288:Generated_Source\PSoC5/Servo_Controller.c ****                 #if(0 != Servo_Controller_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/Servo_Controller.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << Servo_Controller_CTRL
 290:Generated_Source\PSoC5/Servo_Controller.c ****                                                Servo_Controller_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/Servo_Controller.c ****                 #else
 292:Generated_Source\PSoC5/Servo_Controller.c ****                     uint8 comparemode2masked = comparemode & Servo_Controller_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/Servo_Controller.c ****                 #endif /* (0 != Servo_Controller_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/Servo_Controller.c **** 
 295:Generated_Source\PSoC5/Servo_Controller.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/Servo_Controller.c ****                 Servo_Controller_CONTROL &= ((uint8)(~(Servo_Controller_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/Servo_Controller.c ****                                             Servo_Controller_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/Servo_Controller.c ****                 Servo_Controller_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/Servo_Controller.c **** 
 300:Generated_Source\PSoC5/Servo_Controller.c ****             #else
 301:Generated_Source\PSoC5/Servo_Controller.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/Servo_Controller.c ****             #endif /* (Servo_Controller_UsingFixedFunction) */
 303:Generated_Source\PSoC5/Servo_Controller.c ****         }
 304:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* Servo_Controller_CompareMode1SW */
 305:Generated_Source\PSoC5/Servo_Controller.c **** 
 306:Generated_Source\PSoC5/Servo_Controller.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/Servo_Controller.c **** 
 308:Generated_Source\PSoC5/Servo_Controller.c ****     #if (Servo_Controller_CompareMode1SW)
 309:Generated_Source\PSoC5/Servo_Controller.c **** 
 310:Generated_Source\PSoC5/Servo_Controller.c **** 
 311:Generated_Source\PSoC5/Servo_Controller.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/Servo_Controller.c ****         * Function Name: Servo_Controller_SetCompareMode1
 313:Generated_Source\PSoC5/Servo_Controller.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/Servo_Controller.c ****         *
 315:Generated_Source\PSoC5/Servo_Controller.c ****         * Summary:
 316:Generated_Source\PSoC5/Servo_Controller.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/Servo_Controller.c ****         *
 318:Generated_Source\PSoC5/Servo_Controller.c ****         * Parameters:
 319:Generated_Source\PSoC5/Servo_Controller.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/Servo_Controller.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 8


 321:Generated_Source\PSoC5/Servo_Controller.c ****         *
 322:Generated_Source\PSoC5/Servo_Controller.c ****         * Return:
 323:Generated_Source\PSoC5/Servo_Controller.c ****         *  None
 324:Generated_Source\PSoC5/Servo_Controller.c ****         *
 325:Generated_Source\PSoC5/Servo_Controller.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/Servo_Controller.c ****         void Servo_Controller_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/Servo_Controller.c ****         {
 328:Generated_Source\PSoC5/Servo_Controller.c ****             #if(0 != Servo_Controller_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/Servo_Controller.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << Servo_Controller_CTRL_CMPM
 330:Generated_Source\PSoC5/Servo_Controller.c ****                                            Servo_Controller_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/Servo_Controller.c ****             #else
 332:Generated_Source\PSoC5/Servo_Controller.c ****                 uint8 comparemodemasked = comparemode & Servo_Controller_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/Servo_Controller.c ****             #endif /* (0 != Servo_Controller_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/Servo_Controller.c **** 
 335:Generated_Source\PSoC5/Servo_Controller.c ****             #if (Servo_Controller_UseControl)
 336:Generated_Source\PSoC5/Servo_Controller.c ****                 Servo_Controller_CONTROL &= ((uint8)(~Servo_Controller_CTRL_CMPMODE1_MASK)); /*Clea
 337:Generated_Source\PSoC5/Servo_Controller.c ****                 Servo_Controller_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/Servo_Controller.c ****             #endif /* (Servo_Controller_UseControl) */
 339:Generated_Source\PSoC5/Servo_Controller.c ****         }
 340:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* Servo_Controller_CompareMode1SW */
 341:Generated_Source\PSoC5/Servo_Controller.c **** 
 342:Generated_Source\PSoC5/Servo_Controller.c **** #if (Servo_Controller_CompareMode2SW)
 343:Generated_Source\PSoC5/Servo_Controller.c **** 
 344:Generated_Source\PSoC5/Servo_Controller.c **** 
 345:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_SetCompareMode2
 347:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/Servo_Controller.c ****     *
 349:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 350:Generated_Source\PSoC5/Servo_Controller.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/Servo_Controller.c ****     *
 352:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 353:Generated_Source\PSoC5/Servo_Controller.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/Servo_Controller.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/Servo_Controller.c ****     *
 356:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 357:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 358:Generated_Source\PSoC5/Servo_Controller.c ****     *
 359:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/Servo_Controller.c ****     void Servo_Controller_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/Servo_Controller.c ****     {
 362:Generated_Source\PSoC5/Servo_Controller.c **** 
 363:Generated_Source\PSoC5/Servo_Controller.c ****         #if(0 != Servo_Controller_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/Servo_Controller.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << Servo_Controller_CTRL_CMPMODE2
 365:Generated_Source\PSoC5/Servo_Controller.c ****                                                  Servo_Controller_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/Servo_Controller.c ****         #else
 367:Generated_Source\PSoC5/Servo_Controller.c ****             uint8 comparemodemasked = comparemode & Servo_Controller_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (0 != Servo_Controller_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/Servo_Controller.c **** 
 370:Generated_Source\PSoC5/Servo_Controller.c ****         #if (Servo_Controller_UseControl)
 371:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_CONTROL &= ((uint8)(~Servo_Controller_CTRL_CMPMODE2_MASK)); /*Clear ex
 372:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_UseControl) */
 374:Generated_Source\PSoC5/Servo_Controller.c ****     }
 375:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /*Servo_Controller_CompareMode2SW */
 376:Generated_Source\PSoC5/Servo_Controller.c **** 
 377:Generated_Source\PSoC5/Servo_Controller.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 9


 378:Generated_Source\PSoC5/Servo_Controller.c **** 
 379:Generated_Source\PSoC5/Servo_Controller.c **** 
 380:Generated_Source\PSoC5/Servo_Controller.c **** #if (!Servo_Controller_UsingFixedFunction)
 381:Generated_Source\PSoC5/Servo_Controller.c **** 
 382:Generated_Source\PSoC5/Servo_Controller.c **** 
 383:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_WriteCounter
 385:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/Servo_Controller.c ****     *
 387:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 388:Generated_Source\PSoC5/Servo_Controller.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/Servo_Controller.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/Servo_Controller.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/Servo_Controller.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/Servo_Controller.c ****     *
 393:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 394:Generated_Source\PSoC5/Servo_Controller.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/Servo_Controller.c ****     *
 396:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 397:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 398:Generated_Source\PSoC5/Servo_Controller.c ****     *
 399:Generated_Source\PSoC5/Servo_Controller.c ****     * Side Effects:
 400:Generated_Source\PSoC5/Servo_Controller.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/Servo_Controller.c ****     *
 402:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/Servo_Controller.c ****     void Servo_Controller_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/Servo_Controller.c ****                                        
 405:Generated_Source\PSoC5/Servo_Controller.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/Servo_Controller.c ****         CY_SET_REG8(Servo_Controller_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 0A650040 		.word	1073767690
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	Servo_Controller_WriteCounter, .-Servo_Controller_WriteCounter
  97              		.section	.text.Servo_Controller_ReadCounter,"ax",%progbits
  98              		.align	2
  99              		.global	Servo_Controller_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	Servo_Controller_ReadCounter, %function
 103              	Servo_Controller_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/Servo_Controller.c ****     }
 408:Generated_Source\PSoC5/Servo_Controller.c **** 
 409:Generated_Source\PSoC5/Servo_Controller.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 10


 410:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_ReadCounter
 412:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/Servo_Controller.c ****     *
 414:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 415:Generated_Source\PSoC5/Servo_Controller.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/Servo_Controller.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/Servo_Controller.c ****     *
 418:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 419:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 420:Generated_Source\PSoC5/Servo_Controller.c ****     *
 421:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 422:Generated_Source\PSoC5/Servo_Controller.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/Servo_Controller.c ****     *
 424:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/Servo_Controller.c ****     uint8 Servo_Controller_ReadCounter(void) 
 426:Generated_Source\PSoC5/Servo_Controller.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/Servo_Controller.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/Servo_Controller.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/Servo_Controller.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/Servo_Controller.c ****           (void)CY_GET_REG8(Servo_Controller_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/Servo_Controller.c **** 
 432:Generated_Source\PSoC5/Servo_Controller.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/Servo_Controller.c ****         return (CY_GET_REG8(Servo_Controller_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/Servo_Controller.c ****     }
 116              		.loc 1 434 0
 117 0008 7047     		bx	lr
 118              	.L12:
 119 000a 00BF     		.align	2
 120              	.L11:
 121 000c 1A650040 		.word	1073767706
 122 0010 5A650040 		.word	1073767770
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	Servo_Controller_ReadCounter, .-Servo_Controller_ReadCounter
 126              		.section	.text.Servo_Controller_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	Servo_Controller_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	Servo_Controller_WritePeriod, %function
 132              	Servo_Controller_WritePeriod:
 133              	.LFB7:
 435:Generated_Source\PSoC5/Servo_Controller.c **** 
 436:Generated_Source\PSoC5/Servo_Controller.c ****     #if (Servo_Controller_UseStatus)
 437:Generated_Source\PSoC5/Servo_Controller.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 11


 438:Generated_Source\PSoC5/Servo_Controller.c **** 
 439:Generated_Source\PSoC5/Servo_Controller.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/Servo_Controller.c ****         * Function Name: Servo_Controller_ClearFIFO
 441:Generated_Source\PSoC5/Servo_Controller.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/Servo_Controller.c ****         *
 443:Generated_Source\PSoC5/Servo_Controller.c ****         * Summary:
 444:Generated_Source\PSoC5/Servo_Controller.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/Servo_Controller.c ****         *
 446:Generated_Source\PSoC5/Servo_Controller.c ****         * Parameters:
 447:Generated_Source\PSoC5/Servo_Controller.c ****         *  None
 448:Generated_Source\PSoC5/Servo_Controller.c ****         *
 449:Generated_Source\PSoC5/Servo_Controller.c ****         * Return:
 450:Generated_Source\PSoC5/Servo_Controller.c ****         *  None
 451:Generated_Source\PSoC5/Servo_Controller.c ****         *
 452:Generated_Source\PSoC5/Servo_Controller.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/Servo_Controller.c ****         void Servo_Controller_ClearFIFO(void) 
 454:Generated_Source\PSoC5/Servo_Controller.c ****         {
 455:Generated_Source\PSoC5/Servo_Controller.c ****             while(0u != (Servo_Controller_ReadStatusRegister() & Servo_Controller_STATUS_FIFONEMPTY
 456:Generated_Source\PSoC5/Servo_Controller.c ****             {
 457:Generated_Source\PSoC5/Servo_Controller.c ****                 (void)Servo_Controller_ReadCapture();
 458:Generated_Source\PSoC5/Servo_Controller.c ****             }
 459:Generated_Source\PSoC5/Servo_Controller.c ****         }
 460:Generated_Source\PSoC5/Servo_Controller.c **** 
 461:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* Servo_Controller_UseStatus */
 462:Generated_Source\PSoC5/Servo_Controller.c **** 
 463:Generated_Source\PSoC5/Servo_Controller.c **** #endif /* !Servo_Controller_UsingFixedFunction */
 464:Generated_Source\PSoC5/Servo_Controller.c **** 
 465:Generated_Source\PSoC5/Servo_Controller.c **** 
 466:Generated_Source\PSoC5/Servo_Controller.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Servo_Controller.c **** * Function Name: Servo_Controller_WritePeriod
 468:Generated_Source\PSoC5/Servo_Controller.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Servo_Controller.c **** *
 470:Generated_Source\PSoC5/Servo_Controller.c **** * Summary:
 471:Generated_Source\PSoC5/Servo_Controller.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/Servo_Controller.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/Servo_Controller.c **** *
 474:Generated_Source\PSoC5/Servo_Controller.c **** * Parameters:
 475:Generated_Source\PSoC5/Servo_Controller.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/Servo_Controller.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/Servo_Controller.c **** *
 478:Generated_Source\PSoC5/Servo_Controller.c **** * Return:
 479:Generated_Source\PSoC5/Servo_Controller.c **** *  None
 480:Generated_Source\PSoC5/Servo_Controller.c **** *
 481:Generated_Source\PSoC5/Servo_Controller.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/Servo_Controller.c **** void Servo_Controller_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/Servo_Controller.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:Generated_Source\PSoC5/Servo_Controller.c ****     #if(Servo_Controller_UsingFixedFunction)
 485:Generated_Source\PSoC5/Servo_Controller.c ****         CY_SET_REG16(Servo_Controller_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/Servo_Controller.c ****     #else
 487:Generated_Source\PSoC5/Servo_Controller.c ****         CY_SET_REG8(Servo_Controller_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1870     		strb	r0, [r3]
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 4A650040 		.word	1073767754
 148              		.cfi_endproc
 149              	.LFE7:
 150              		.size	Servo_Controller_WritePeriod, .-Servo_Controller_WritePeriod
 151              		.section	.text.Servo_Controller_WriteCompare1,"ax",%progbits
 152              		.align	2
 153              		.global	Servo_Controller_WriteCompare1
 154              		.thumb
 155              		.thumb_func
 156              		.type	Servo_Controller_WriteCompare1, %function
 157              	Servo_Controller_WriteCompare1:
 158              	.LFB8:
 488:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (Servo_Controller_UsingFixedFunction) */
 489:Generated_Source\PSoC5/Servo_Controller.c **** }
 490:Generated_Source\PSoC5/Servo_Controller.c **** 
 491:Generated_Source\PSoC5/Servo_Controller.c **** #if (Servo_Controller_UseOneCompareMode)
 492:Generated_Source\PSoC5/Servo_Controller.c **** 
 493:Generated_Source\PSoC5/Servo_Controller.c **** 
 494:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_WriteCompare
 496:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/Servo_Controller.c ****     *
 498:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 499:Generated_Source\PSoC5/Servo_Controller.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/Servo_Controller.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/Servo_Controller.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/Servo_Controller.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/Servo_Controller.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/Servo_Controller.c ****     *
 505:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 506:Generated_Source\PSoC5/Servo_Controller.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/Servo_Controller.c ****     *
 508:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 509:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 510:Generated_Source\PSoC5/Servo_Controller.c ****     *
 511:Generated_Source\PSoC5/Servo_Controller.c ****     * Side Effects:
 512:Generated_Source\PSoC5/Servo_Controller.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/Servo_Controller.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/Servo_Controller.c ****     *
 515:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/Servo_Controller.c ****     void Servo_Controller_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/Servo_Controller.c ****                                        
 518:Generated_Source\PSoC5/Servo_Controller.c ****     {
 519:Generated_Source\PSoC5/Servo_Controller.c ****         #if(Servo_Controller_UsingFixedFunction)
 520:Generated_Source\PSoC5/Servo_Controller.c ****             CY_SET_REG16(Servo_Controller_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/Servo_Controller.c ****         #else
 522:Generated_Source\PSoC5/Servo_Controller.c ****             CY_SET_REG8(Servo_Controller_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_UsingFixedFunction) */
 524:Generated_Source\PSoC5/Servo_Controller.c **** 
 525:Generated_Source\PSoC5/Servo_Controller.c ****         #if (Servo_Controller_PWMMode == Servo_Controller__B_PWM__DITHER)
 526:Generated_Source\PSoC5/Servo_Controller.c ****             #if(Servo_Controller_UsingFixedFunction)
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 13


 527:Generated_Source\PSoC5/Servo_Controller.c ****                 CY_SET_REG16(Servo_Controller_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/Servo_Controller.c ****             #else
 529:Generated_Source\PSoC5/Servo_Controller.c ****                 CY_SET_REG8(Servo_Controller_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/Servo_Controller.c ****             #endif /* (Servo_Controller_UsingFixedFunction) */
 531:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_PWMMode == Servo_Controller__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/Servo_Controller.c ****     }
 533:Generated_Source\PSoC5/Servo_Controller.c **** 
 534:Generated_Source\PSoC5/Servo_Controller.c **** 
 535:Generated_Source\PSoC5/Servo_Controller.c **** #else
 536:Generated_Source\PSoC5/Servo_Controller.c **** 
 537:Generated_Source\PSoC5/Servo_Controller.c **** 
 538:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_WriteCompare1
 540:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/Servo_Controller.c ****     *
 542:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 543:Generated_Source\PSoC5/Servo_Controller.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/Servo_Controller.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/Servo_Controller.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/Servo_Controller.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/Servo_Controller.c ****     *
 548:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 549:Generated_Source\PSoC5/Servo_Controller.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/Servo_Controller.c ****     *
 551:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 552:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 553:Generated_Source\PSoC5/Servo_Controller.c ****     *
 554:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/Servo_Controller.c ****     void Servo_Controller_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/Servo_Controller.c ****                                         
 557:Generated_Source\PSoC5/Servo_Controller.c ****     {
 159              		.loc 1 557 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 558:Generated_Source\PSoC5/Servo_Controller.c ****         #if(Servo_Controller_UsingFixedFunction)
 559:Generated_Source\PSoC5/Servo_Controller.c ****             CY_SET_REG16(Servo_Controller_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/Servo_Controller.c ****         #else
 561:Generated_Source\PSoC5/Servo_Controller.c ****             CY_SET_REG8(Servo_Controller_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 561 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1870     		strb	r0, [r3]
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 2A650040 		.word	1073767722
 173              		.cfi_endproc
 174              	.LFE8:
 175              		.size	Servo_Controller_WriteCompare1, .-Servo_Controller_WriteCompare1
 176              		.section	.text.Servo_Controller_WriteCompare2,"ax",%progbits
 177              		.align	2
 178              		.global	Servo_Controller_WriteCompare2
 179              		.thumb
 180              		.thumb_func
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 14


 181              		.type	Servo_Controller_WriteCompare2, %function
 182              	Servo_Controller_WriteCompare2:
 183              	.LFB9:
 562:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_UsingFixedFunction) */
 563:Generated_Source\PSoC5/Servo_Controller.c ****     }
 564:Generated_Source\PSoC5/Servo_Controller.c **** 
 565:Generated_Source\PSoC5/Servo_Controller.c **** 
 566:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_WriteCompare2
 568:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/Servo_Controller.c ****     *
 570:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 571:Generated_Source\PSoC5/Servo_Controller.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/Servo_Controller.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/Servo_Controller.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/Servo_Controller.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/Servo_Controller.c ****     *  mode.
 576:Generated_Source\PSoC5/Servo_Controller.c ****     *
 577:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 578:Generated_Source\PSoC5/Servo_Controller.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/Servo_Controller.c ****     *
 580:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 581:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 582:Generated_Source\PSoC5/Servo_Controller.c ****     *
 583:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/Servo_Controller.c ****     void Servo_Controller_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/Servo_Controller.c ****                                         
 586:Generated_Source\PSoC5/Servo_Controller.c ****     {
 184              		.loc 1 586 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL3:
 587:Generated_Source\PSoC5/Servo_Controller.c ****         #if(Servo_Controller_UsingFixedFunction)
 588:Generated_Source\PSoC5/Servo_Controller.c ****             CY_SET_REG16(Servo_Controller_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/Servo_Controller.c ****         #else
 590:Generated_Source\PSoC5/Servo_Controller.c ****             CY_SET_REG8(Servo_Controller_COMPARE2_LSB_PTR, compare);
 190              		.loc 1 590 0
 191 0000 014B     		ldr	r3, .L20
 192 0002 1870     		strb	r0, [r3]
 193 0004 7047     		bx	lr
 194              	.L21:
 195 0006 00BF     		.align	2
 196              	.L20:
 197 0008 3A650040 		.word	1073767738
 198              		.cfi_endproc
 199              	.LFE9:
 200              		.size	Servo_Controller_WriteCompare2, .-Servo_Controller_WriteCompare2
 201              		.section	.text.Servo_Controller_SetInterruptMode,"ax",%progbits
 202              		.align	2
 203              		.global	Servo_Controller_SetInterruptMode
 204              		.thumb
 205              		.thumb_func
 206              		.type	Servo_Controller_SetInterruptMode, %function
 207              	Servo_Controller_SetInterruptMode:
 208              	.LFB10:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 15


 591:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_UsingFixedFunction) */
 592:Generated_Source\PSoC5/Servo_Controller.c ****     }
 593:Generated_Source\PSoC5/Servo_Controller.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/Servo_Controller.c **** 
 595:Generated_Source\PSoC5/Servo_Controller.c **** #if (Servo_Controller_DeadBandUsed)
 596:Generated_Source\PSoC5/Servo_Controller.c **** 
 597:Generated_Source\PSoC5/Servo_Controller.c **** 
 598:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_WriteDeadTime
 600:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/Servo_Controller.c ****     *
 602:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 603:Generated_Source\PSoC5/Servo_Controller.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/Servo_Controller.c ****     *
 605:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 606:Generated_Source\PSoC5/Servo_Controller.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/Servo_Controller.c ****     *
 608:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 609:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 610:Generated_Source\PSoC5/Servo_Controller.c ****     *
 611:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/Servo_Controller.c ****     void Servo_Controller_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/Servo_Controller.c ****     {
 614:Generated_Source\PSoC5/Servo_Controller.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/Servo_Controller.c ****         #if(!Servo_Controller_DeadBand2_4)
 616:Generated_Source\PSoC5/Servo_Controller.c ****             CY_SET_REG8(Servo_Controller_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/Servo_Controller.c ****         #else
 618:Generated_Source\PSoC5/Servo_Controller.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/Servo_Controller.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_DEADBAND_COUNT &= ((uint8)(~Servo_Controller_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/Servo_Controller.c **** 
 622:Generated_Source\PSoC5/Servo_Controller.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/Servo_Controller.c ****             #if(Servo_Controller_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/Servo_Controller.c ****                 Servo_Controller_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << Servo_Controller_DEA
 625:Generated_Source\PSoC5/Servo_Controller.c ****                                                     Servo_Controller_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/Servo_Controller.c ****             #else
 627:Generated_Source\PSoC5/Servo_Controller.c ****                 Servo_Controller_DEADBAND_COUNT |= deadtime & Servo_Controller_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/Servo_Controller.c ****             #endif /* (Servo_Controller_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/Servo_Controller.c **** 
 630:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (!Servo_Controller_DeadBand2_4) */
 631:Generated_Source\PSoC5/Servo_Controller.c ****     }
 632:Generated_Source\PSoC5/Servo_Controller.c **** 
 633:Generated_Source\PSoC5/Servo_Controller.c **** 
 634:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_ReadDeadTime
 636:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/Servo_Controller.c ****     *
 638:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 639:Generated_Source\PSoC5/Servo_Controller.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/Servo_Controller.c ****     *
 641:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 642:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 643:Generated_Source\PSoC5/Servo_Controller.c ****     *
 644:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 645:Generated_Source\PSoC5/Servo_Controller.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/Servo_Controller.c ****     *
 647:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 16


 648:Generated_Source\PSoC5/Servo_Controller.c ****     uint8 Servo_Controller_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/Servo_Controller.c ****     {
 650:Generated_Source\PSoC5/Servo_Controller.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/Servo_Controller.c ****         #if(!Servo_Controller_DeadBand2_4)
 652:Generated_Source\PSoC5/Servo_Controller.c ****             return (CY_GET_REG8(Servo_Controller_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/Servo_Controller.c ****         #else
 654:Generated_Source\PSoC5/Servo_Controller.c **** 
 655:Generated_Source\PSoC5/Servo_Controller.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/Servo_Controller.c ****             #if(Servo_Controller_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/Servo_Controller.c ****                 return ((uint8)(((uint8)(Servo_Controller_DEADBAND_COUNT & Servo_Controller_DEADBAN
 658:Generated_Source\PSoC5/Servo_Controller.c ****                                                                            Servo_Controller_DEADBAN
 659:Generated_Source\PSoC5/Servo_Controller.c ****             #else
 660:Generated_Source\PSoC5/Servo_Controller.c ****                 return (Servo_Controller_DEADBAND_COUNT & Servo_Controller_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/Servo_Controller.c ****             #endif /* (Servo_Controller_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (!Servo_Controller_DeadBand2_4) */
 663:Generated_Source\PSoC5/Servo_Controller.c ****     }
 664:Generated_Source\PSoC5/Servo_Controller.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/Servo_Controller.c **** 
 666:Generated_Source\PSoC5/Servo_Controller.c **** #if (Servo_Controller_UseStatus || Servo_Controller_UsingFixedFunction)
 667:Generated_Source\PSoC5/Servo_Controller.c **** 
 668:Generated_Source\PSoC5/Servo_Controller.c **** 
 669:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_SetInterruptMode
 671:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/Servo_Controller.c ****     *
 673:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 674:Generated_Source\PSoC5/Servo_Controller.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/Servo_Controller.c ****     *  source status register.
 676:Generated_Source\PSoC5/Servo_Controller.c ****     *
 677:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 678:Generated_Source\PSoC5/Servo_Controller.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/Servo_Controller.c ****     *
 680:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 681:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 682:Generated_Source\PSoC5/Servo_Controller.c ****     *
 683:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/Servo_Controller.c ****     void Servo_Controller_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/Servo_Controller.c ****     {
 209              		.loc 1 685 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214              	.LVL4:
 686:Generated_Source\PSoC5/Servo_Controller.c ****         CY_SET_REG8(Servo_Controller_STATUS_MASK_PTR, interruptMode);
 215              		.loc 1 686 0
 216 0000 014B     		ldr	r3, .L23
 217 0002 1870     		strb	r0, [r3]
 218 0004 7047     		bx	lr
 219              	.L24:
 220 0006 00BF     		.align	2
 221              	.L23:
 222 0008 8A650040 		.word	1073767818
 223              		.cfi_endproc
 224              	.LFE10:
 225              		.size	Servo_Controller_SetInterruptMode, .-Servo_Controller_SetInterruptMode
 226              		.section	.text.Servo_Controller_ReadStatusRegister,"ax",%progbits
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 17


 227              		.align	2
 228              		.global	Servo_Controller_ReadStatusRegister
 229              		.thumb
 230              		.thumb_func
 231              		.type	Servo_Controller_ReadStatusRegister, %function
 232              	Servo_Controller_ReadStatusRegister:
 233              	.LFB11:
 687:Generated_Source\PSoC5/Servo_Controller.c ****     }
 688:Generated_Source\PSoC5/Servo_Controller.c **** 
 689:Generated_Source\PSoC5/Servo_Controller.c **** 
 690:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_ReadStatusRegister
 692:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/Servo_Controller.c ****     *
 694:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 695:Generated_Source\PSoC5/Servo_Controller.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/Servo_Controller.c ****     *
 697:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 698:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 699:Generated_Source\PSoC5/Servo_Controller.c ****     *
 700:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 701:Generated_Source\PSoC5/Servo_Controller.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/Servo_Controller.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/Servo_Controller.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/Servo_Controller.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/Servo_Controller.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/Servo_Controller.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/Servo_Controller.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/Servo_Controller.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/Servo_Controller.c ****     *
 710:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/Servo_Controller.c ****     uint8 Servo_Controller_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/Servo_Controller.c ****     {
 234              		.loc 1 712 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 713:Generated_Source\PSoC5/Servo_Controller.c ****         return (CY_GET_REG8(Servo_Controller_STATUS_PTR));
 239              		.loc 1 713 0
 240 0000 014B     		ldr	r3, .L26
 241 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/Servo_Controller.c ****     }
 242              		.loc 1 714 0
 243 0004 7047     		bx	lr
 244              	.L27:
 245 0006 00BF     		.align	2
 246              	.L26:
 247 0008 6A650040 		.word	1073767786
 248              		.cfi_endproc
 249              	.LFE11:
 250              		.size	Servo_Controller_ReadStatusRegister, .-Servo_Controller_ReadStatusRegister
 251              		.section	.text.Servo_Controller_ReadControlRegister,"ax",%progbits
 252              		.align	2
 253              		.global	Servo_Controller_ReadControlRegister
 254              		.thumb
 255              		.thumb_func
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 18


 256              		.type	Servo_Controller_ReadControlRegister, %function
 257              	Servo_Controller_ReadControlRegister:
 258              	.LFB12:
 715:Generated_Source\PSoC5/Servo_Controller.c **** 
 716:Generated_Source\PSoC5/Servo_Controller.c **** #endif /* (Servo_Controller_UseStatus || Servo_Controller_UsingFixedFunction) */
 717:Generated_Source\PSoC5/Servo_Controller.c **** 
 718:Generated_Source\PSoC5/Servo_Controller.c **** 
 719:Generated_Source\PSoC5/Servo_Controller.c **** #if (Servo_Controller_UseControl)
 720:Generated_Source\PSoC5/Servo_Controller.c **** 
 721:Generated_Source\PSoC5/Servo_Controller.c **** 
 722:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_ReadControlRegister
 724:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/Servo_Controller.c ****     *
 726:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 727:Generated_Source\PSoC5/Servo_Controller.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/Servo_Controller.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/Servo_Controller.c ****     *
 730:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 731:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 732:Generated_Source\PSoC5/Servo_Controller.c ****     *
 733:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 734:Generated_Source\PSoC5/Servo_Controller.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/Servo_Controller.c ****     *
 736:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/Servo_Controller.c ****     uint8 Servo_Controller_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/Servo_Controller.c ****     {
 259              		.loc 1 738 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 739:Generated_Source\PSoC5/Servo_Controller.c ****         uint8 result;
 740:Generated_Source\PSoC5/Servo_Controller.c **** 
 741:Generated_Source\PSoC5/Servo_Controller.c ****         result = CY_GET_REG8(Servo_Controller_CONTROL_PTR);
 264              		.loc 1 741 0
 265 0000 014B     		ldr	r3, .L29
 266 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 267              	.LVL5:
 742:Generated_Source\PSoC5/Servo_Controller.c ****         return (result);
 743:Generated_Source\PSoC5/Servo_Controller.c ****     }
 268              		.loc 1 743 0
 269 0004 7047     		bx	lr
 270              	.L30:
 271 0006 00BF     		.align	2
 272              	.L29:
 273 0008 7A650040 		.word	1073767802
 274              		.cfi_endproc
 275              	.LFE12:
 276              		.size	Servo_Controller_ReadControlRegister, .-Servo_Controller_ReadControlRegister
 277              		.section	.text.Servo_Controller_WriteControlRegister,"ax",%progbits
 278              		.align	2
 279              		.global	Servo_Controller_WriteControlRegister
 280              		.thumb
 281              		.thumb_func
 282              		.type	Servo_Controller_WriteControlRegister, %function
 283              	Servo_Controller_WriteControlRegister:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 19


 284              	.LFB13:
 744:Generated_Source\PSoC5/Servo_Controller.c **** 
 745:Generated_Source\PSoC5/Servo_Controller.c **** 
 746:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_WriteControlRegister
 748:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/Servo_Controller.c ****     *
 750:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 751:Generated_Source\PSoC5/Servo_Controller.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/Servo_Controller.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/Servo_Controller.c ****     *
 754:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 755:Generated_Source\PSoC5/Servo_Controller.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/Servo_Controller.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/Servo_Controller.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/Servo_Controller.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/Servo_Controller.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/Servo_Controller.c ****     *
 761:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 762:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 763:Generated_Source\PSoC5/Servo_Controller.c ****     *
 764:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/Servo_Controller.c ****     void Servo_Controller_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/Servo_Controller.c ****     {
 285              		.loc 1 766 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290              	.LVL6:
 767:Generated_Source\PSoC5/Servo_Controller.c ****         CY_SET_REG8(Servo_Controller_CONTROL_PTR, control);
 291              		.loc 1 767 0
 292 0000 014B     		ldr	r3, .L32
 293 0002 1870     		strb	r0, [r3]
 294 0004 7047     		bx	lr
 295              	.L33:
 296 0006 00BF     		.align	2
 297              	.L32:
 298 0008 7A650040 		.word	1073767802
 299              		.cfi_endproc
 300              	.LFE13:
 301              		.size	Servo_Controller_WriteControlRegister, .-Servo_Controller_WriteControlRegister
 302              		.section	.text.Servo_Controller_ReadCapture,"ax",%progbits
 303              		.align	2
 304              		.global	Servo_Controller_ReadCapture
 305              		.thumb
 306              		.thumb_func
 307              		.type	Servo_Controller_ReadCapture, %function
 308              	Servo_Controller_ReadCapture:
 309              	.LFB14:
 768:Generated_Source\PSoC5/Servo_Controller.c ****     }
 769:Generated_Source\PSoC5/Servo_Controller.c **** 
 770:Generated_Source\PSoC5/Servo_Controller.c **** #endif /* (Servo_Controller_UseControl) */
 771:Generated_Source\PSoC5/Servo_Controller.c **** 
 772:Generated_Source\PSoC5/Servo_Controller.c **** 
 773:Generated_Source\PSoC5/Servo_Controller.c **** #if (!Servo_Controller_UsingFixedFunction)
 774:Generated_Source\PSoC5/Servo_Controller.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 20


 775:Generated_Source\PSoC5/Servo_Controller.c **** 
 776:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_ReadCapture
 778:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/Servo_Controller.c ****     *
 780:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 781:Generated_Source\PSoC5/Servo_Controller.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/Servo_Controller.c ****     *
 783:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 784:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 785:Generated_Source\PSoC5/Servo_Controller.c ****     *
 786:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 787:Generated_Source\PSoC5/Servo_Controller.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/Servo_Controller.c ****     *
 789:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/Servo_Controller.c ****     uint8 Servo_Controller_ReadCapture(void) 
 791:Generated_Source\PSoC5/Servo_Controller.c ****     {
 310              		.loc 1 791 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 792:Generated_Source\PSoC5/Servo_Controller.c ****         return (CY_GET_REG8(Servo_Controller_CAPTURE_LSB_PTR));
 315              		.loc 1 792 0
 316 0000 014B     		ldr	r3, .L35
 317 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:Generated_Source\PSoC5/Servo_Controller.c ****     }
 318              		.loc 1 793 0
 319 0004 7047     		bx	lr
 320              	.L36:
 321 0006 00BF     		.align	2
 322              	.L35:
 323 0008 5A650040 		.word	1073767770
 324              		.cfi_endproc
 325              	.LFE14:
 326              		.size	Servo_Controller_ReadCapture, .-Servo_Controller_ReadCapture
 327              		.section	.text.Servo_Controller_ClearFIFO,"ax",%progbits
 328              		.align	2
 329              		.global	Servo_Controller_ClearFIFO
 330              		.thumb
 331              		.thumb_func
 332              		.type	Servo_Controller_ClearFIFO, %function
 333              	Servo_Controller_ClearFIFO:
 334              	.LFB6:
 454:Generated_Source\PSoC5/Servo_Controller.c ****             while(0u != (Servo_Controller_ReadStatusRegister() & Servo_Controller_STATUS_FIFONEMPTY
 335              		.loc 1 454 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 08B5     		push	{r3, lr}
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 3, -8
 342              		.cfi_offset 14, -4
 455:Generated_Source\PSoC5/Servo_Controller.c ****             {
 343              		.loc 1 455 0
 344 0002 01E0     		b	.L38
 345              	.L39:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 21


 457:Generated_Source\PSoC5/Servo_Controller.c ****             }
 346              		.loc 1 457 0
 347 0004 FFF7FEFF 		bl	Servo_Controller_ReadCapture
 348              	.LVL7:
 349              	.L38:
 455:Generated_Source\PSoC5/Servo_Controller.c ****             {
 350              		.loc 1 455 0
 351 0008 FFF7FEFF 		bl	Servo_Controller_ReadStatusRegister
 352              	.LVL8:
 353 000c 10F0100F 		tst	r0, #16
 354 0010 F8D1     		bne	.L39
 459:Generated_Source\PSoC5/Servo_Controller.c **** 
 355              		.loc 1 459 0
 356 0012 08BD     		pop	{r3, pc}
 357              		.cfi_endproc
 358              	.LFE6:
 359              		.size	Servo_Controller_ClearFIFO, .-Servo_Controller_ClearFIFO
 360              		.section	.text.Servo_Controller_Init,"ax",%progbits
 361              		.align	2
 362              		.global	Servo_Controller_Init
 363              		.thumb
 364              		.thumb_func
 365              		.type	Servo_Controller_Init, %function
 366              	Servo_Controller_Init:
 367              	.LFB1:
  85:Generated_Source\PSoC5/Servo_Controller.c ****     #if (Servo_Controller_UsingFixedFunction || Servo_Controller_UseControl)
 368              		.loc 1 85 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 10B5     		push	{r4, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 4, -8
 375              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/Servo_Controller.c ****                 ((uint8)(~Servo_Controller_CTRL_CMPMODE1_MASK));
 376              		.loc 1 117 0
 377 0002 134A     		ldr	r2, .L43
 378 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 379 0006 03F0C003 		and	r3, r3, #192
 380              	.LVL9:
 119:Generated_Source\PSoC5/Servo_Controller.c ****                                    Servo_Controller_DEFAULT_COMPARE1_MODE;
 381              		.loc 1 119 0
 382 000a 43F00903 		orr	r3, r3, #9
 383              	.LVL10:
 384 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/Servo_Controller.c ****         #else /* (Servo_Controller_Resolution == 16)*/
 385              		.loc 1 126 0
 386 0010 104C     		ldr	r4, .L43+4
 387 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 388 0014 43F00103 		orr	r3, r3, #1
 389 0018 2370     		strb	r3, [r4]
 133:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (!Servo_Controller_UsingFixedFunction) */
 390              		.loc 1 133 0
 391 001a 6420     		movs	r0, #100
 392 001c FFF7FEFF 		bl	Servo_Controller_WriteCounter
 393              	.LVL11:
 136:Generated_Source\PSoC5/Servo_Controller.c **** 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 22


 394              		.loc 1 136 0
 395 0020 6420     		movs	r0, #100
 396 0022 FFF7FEFF 		bl	Servo_Controller_WritePeriod
 397              	.LVL12:
 141:Generated_Source\PSoC5/Servo_Controller.c ****             Servo_Controller_WriteCompare2(Servo_Controller_INIT_COMPARE_VALUE2);
 398              		.loc 1 141 0
 399 0026 0520     		movs	r0, #5
 400 0028 FFF7FEFF 		bl	Servo_Controller_WriteCompare1
 401              	.LVL13:
 142:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_UseOneCompareMode) */
 402              		.loc 1 142 0
 403 002c 3F20     		movs	r0, #63
 404 002e FFF7FEFF 		bl	Servo_Controller_WriteCompare2
 405              	.LVL14:
 154:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (Servo_Controller_UseStatus || Servo_Controller_UsingFixedFunction) */
 406              		.loc 1 154 0
 407 0032 0020     		movs	r0, #0
 408 0034 FFF7FEFF 		bl	Servo_Controller_SetInterruptMode
 409              	.LVL15:
 167:Generated_Source\PSoC5/Servo_Controller.c ****             /* Use the interrupt output of the status register for IRQ output */
 410              		.loc 1 167 0
 411 0038 FFF7FEFF 		bl	CyEnterCriticalSection
 412              	.LVL16:
 169:Generated_Source\PSoC5/Servo_Controller.c **** 
 413              		.loc 1 169 0
 414 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 415 003e 43F01003 		orr	r3, r3, #16
 416 0042 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC5/Servo_Controller.c **** 
 417              		.loc 1 172 0
 418 0044 FFF7FEFF 		bl	CyExitCriticalSection
 419              	.LVL17:
 176:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_UseStatus) */
 420              		.loc 1 176 0
 421 0048 FFF7FEFF 		bl	Servo_Controller_ClearFIFO
 422              	.LVL18:
 423 004c 10BD     		pop	{r4, pc}
 424              	.L44:
 425 004e 00BF     		.align	2
 426              	.L43:
 427 0050 7A650040 		.word	1073767802
 428 0054 9A650040 		.word	1073767834
 429              		.cfi_endproc
 430              	.LFE1:
 431              		.size	Servo_Controller_Init, .-Servo_Controller_Init
 432              		.section	.text.Servo_Controller_Start,"ax",%progbits
 433              		.align	2
 434              		.global	Servo_Controller_Start
 435              		.thumb
 436              		.thumb_func
 437              		.type	Servo_Controller_Start, %function
 438              	Servo_Controller_Start:
 439              	.LFB0:
  56:Generated_Source\PSoC5/Servo_Controller.c ****     /* If not Initialized then initialize all required hardware and software */
 440              		.loc 1 56 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 23


 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 08B5     		push	{r3, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 3, -8
 447              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/Servo_Controller.c ****     {
 448              		.loc 1 58 0
 449 0002 054B     		ldr	r3, .L48
 450 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 451 0006 23B9     		cbnz	r3, .L46
  60:Generated_Source\PSoC5/Servo_Controller.c ****         Servo_Controller_initVar = 1u;
 452              		.loc 1 60 0
 453 0008 FFF7FEFF 		bl	Servo_Controller_Init
 454              	.LVL19:
  61:Generated_Source\PSoC5/Servo_Controller.c ****     }
 455              		.loc 1 61 0
 456 000c 0122     		movs	r2, #1
 457 000e 024B     		ldr	r3, .L48
 458 0010 1A70     		strb	r2, [r3]
 459              	.L46:
  63:Generated_Source\PSoC5/Servo_Controller.c **** 
 460              		.loc 1 63 0
 461 0012 FFF7FEFF 		bl	Servo_Controller_Enable
 462              	.LVL20:
 463 0016 08BD     		pop	{r3, pc}
 464              	.L49:
 465              		.align	2
 466              	.L48:
 467 0018 00000000 		.word	.LANCHOR0
 468              		.cfi_endproc
 469              	.LFE0:
 470              		.size	Servo_Controller_Start, .-Servo_Controller_Start
 471              		.section	.text.Servo_Controller_ReadCompare1,"ax",%progbits
 472              		.align	2
 473              		.global	Servo_Controller_ReadCompare1
 474              		.thumb
 475              		.thumb_func
 476              		.type	Servo_Controller_ReadCompare1, %function
 477              	Servo_Controller_ReadCompare1:
 478              	.LFB15:
 794:Generated_Source\PSoC5/Servo_Controller.c **** 
 795:Generated_Source\PSoC5/Servo_Controller.c **** #endif /* (!Servo_Controller_UsingFixedFunction) */
 796:Generated_Source\PSoC5/Servo_Controller.c **** 
 797:Generated_Source\PSoC5/Servo_Controller.c **** 
 798:Generated_Source\PSoC5/Servo_Controller.c **** #if (Servo_Controller_UseOneCompareMode)
 799:Generated_Source\PSoC5/Servo_Controller.c **** 
 800:Generated_Source\PSoC5/Servo_Controller.c **** 
 801:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_ReadCompare
 803:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/Servo_Controller.c ****     *
 805:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 806:Generated_Source\PSoC5/Servo_Controller.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/Servo_Controller.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/Servo_Controller.c ****     *
 809:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 810:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 24


 811:Generated_Source\PSoC5/Servo_Controller.c ****     *
 812:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 813:Generated_Source\PSoC5/Servo_Controller.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/Servo_Controller.c ****     *
 815:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/Servo_Controller.c ****     uint8 Servo_Controller_ReadCompare(void) 
 817:Generated_Source\PSoC5/Servo_Controller.c ****     {
 818:Generated_Source\PSoC5/Servo_Controller.c ****         #if(Servo_Controller_UsingFixedFunction)
 819:Generated_Source\PSoC5/Servo_Controller.c ****             return ((uint8)CY_GET_REG16(Servo_Controller_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/Servo_Controller.c ****         #else
 821:Generated_Source\PSoC5/Servo_Controller.c ****             return (CY_GET_REG8(Servo_Controller_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/Servo_Controller.c ****         #endif /* (Servo_Controller_UsingFixedFunction) */
 823:Generated_Source\PSoC5/Servo_Controller.c ****     }
 824:Generated_Source\PSoC5/Servo_Controller.c **** 
 825:Generated_Source\PSoC5/Servo_Controller.c **** #else
 826:Generated_Source\PSoC5/Servo_Controller.c **** 
 827:Generated_Source\PSoC5/Servo_Controller.c **** 
 828:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_ReadCompare1
 830:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/Servo_Controller.c ****     *
 832:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 833:Generated_Source\PSoC5/Servo_Controller.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/Servo_Controller.c ****     *
 835:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 836:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 837:Generated_Source\PSoC5/Servo_Controller.c ****     *
 838:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 839:Generated_Source\PSoC5/Servo_Controller.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/Servo_Controller.c ****     *
 841:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/Servo_Controller.c ****     uint8 Servo_Controller_ReadCompare1(void) 
 843:Generated_Source\PSoC5/Servo_Controller.c ****     {
 479              		.loc 1 843 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 844:Generated_Source\PSoC5/Servo_Controller.c ****         return (CY_GET_REG8(Servo_Controller_COMPARE1_LSB_PTR));
 484              		.loc 1 844 0
 485 0000 014B     		ldr	r3, .L51
 486 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 845:Generated_Source\PSoC5/Servo_Controller.c ****     }
 487              		.loc 1 845 0
 488 0004 7047     		bx	lr
 489              	.L52:
 490 0006 00BF     		.align	2
 491              	.L51:
 492 0008 2A650040 		.word	1073767722
 493              		.cfi_endproc
 494              	.LFE15:
 495              		.size	Servo_Controller_ReadCompare1, .-Servo_Controller_ReadCompare1
 496              		.section	.text.Servo_Controller_ReadCompare2,"ax",%progbits
 497              		.align	2
 498              		.global	Servo_Controller_ReadCompare2
 499              		.thumb
 500              		.thumb_func
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 25


 501              		.type	Servo_Controller_ReadCompare2, %function
 502              	Servo_Controller_ReadCompare2:
 503              	.LFB16:
 846:Generated_Source\PSoC5/Servo_Controller.c **** 
 847:Generated_Source\PSoC5/Servo_Controller.c **** 
 848:Generated_Source\PSoC5/Servo_Controller.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/Servo_Controller.c ****     * Function Name: Servo_Controller_ReadCompare2
 850:Generated_Source\PSoC5/Servo_Controller.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/Servo_Controller.c ****     *
 852:Generated_Source\PSoC5/Servo_Controller.c ****     * Summary:
 853:Generated_Source\PSoC5/Servo_Controller.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/Servo_Controller.c ****     *
 855:Generated_Source\PSoC5/Servo_Controller.c ****     * Parameters:
 856:Generated_Source\PSoC5/Servo_Controller.c ****     *  None
 857:Generated_Source\PSoC5/Servo_Controller.c ****     *
 858:Generated_Source\PSoC5/Servo_Controller.c ****     * Return:
 859:Generated_Source\PSoC5/Servo_Controller.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/Servo_Controller.c ****     *
 861:Generated_Source\PSoC5/Servo_Controller.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/Servo_Controller.c ****     uint8 Servo_Controller_ReadCompare2(void) 
 863:Generated_Source\PSoC5/Servo_Controller.c ****     {
 504              		.loc 1 863 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 864:Generated_Source\PSoC5/Servo_Controller.c ****         return (CY_GET_REG8(Servo_Controller_COMPARE2_LSB_PTR));
 509              		.loc 1 864 0
 510 0000 014B     		ldr	r3, .L54
 511 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 865:Generated_Source\PSoC5/Servo_Controller.c ****     }
 512              		.loc 1 865 0
 513 0004 7047     		bx	lr
 514              	.L55:
 515 0006 00BF     		.align	2
 516              	.L54:
 517 0008 3A650040 		.word	1073767738
 518              		.cfi_endproc
 519              	.LFE16:
 520              		.size	Servo_Controller_ReadCompare2, .-Servo_Controller_ReadCompare2
 521              		.section	.text.Servo_Controller_ReadPeriod,"ax",%progbits
 522              		.align	2
 523              		.global	Servo_Controller_ReadPeriod
 524              		.thumb
 525              		.thumb_func
 526              		.type	Servo_Controller_ReadPeriod, %function
 527              	Servo_Controller_ReadPeriod:
 528              	.LFB17:
 866:Generated_Source\PSoC5/Servo_Controller.c **** 
 867:Generated_Source\PSoC5/Servo_Controller.c **** #endif /* (Servo_Controller_UseOneCompareMode) */
 868:Generated_Source\PSoC5/Servo_Controller.c **** 
 869:Generated_Source\PSoC5/Servo_Controller.c **** 
 870:Generated_Source\PSoC5/Servo_Controller.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/Servo_Controller.c **** * Function Name: Servo_Controller_ReadPeriod
 872:Generated_Source\PSoC5/Servo_Controller.c **** ********************************************************************************
 873:Generated_Source\PSoC5/Servo_Controller.c **** *
 874:Generated_Source\PSoC5/Servo_Controller.c **** * Summary:
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 26


 875:Generated_Source\PSoC5/Servo_Controller.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/Servo_Controller.c **** *
 877:Generated_Source\PSoC5/Servo_Controller.c **** * Parameters:
 878:Generated_Source\PSoC5/Servo_Controller.c **** *  None
 879:Generated_Source\PSoC5/Servo_Controller.c **** *
 880:Generated_Source\PSoC5/Servo_Controller.c **** * Return:
 881:Generated_Source\PSoC5/Servo_Controller.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/Servo_Controller.c **** *
 883:Generated_Source\PSoC5/Servo_Controller.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/Servo_Controller.c **** uint8 Servo_Controller_ReadPeriod(void) 
 885:Generated_Source\PSoC5/Servo_Controller.c **** {
 529              		.loc 1 885 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		@ link register save eliminated.
 886:Generated_Source\PSoC5/Servo_Controller.c ****     #if(Servo_Controller_UsingFixedFunction)
 887:Generated_Source\PSoC5/Servo_Controller.c ****         return ((uint8)CY_GET_REG16(Servo_Controller_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/Servo_Controller.c ****     #else
 889:Generated_Source\PSoC5/Servo_Controller.c ****         return (CY_GET_REG8(Servo_Controller_PERIOD_LSB_PTR));
 534              		.loc 1 889 0
 535 0000 014B     		ldr	r3, .L57
 536 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:Generated_Source\PSoC5/Servo_Controller.c ****     #endif /* (Servo_Controller_UsingFixedFunction) */
 891:Generated_Source\PSoC5/Servo_Controller.c **** }
 537              		.loc 1 891 0
 538 0004 7047     		bx	lr
 539              	.L58:
 540 0006 00BF     		.align	2
 541              	.L57:
 542 0008 4A650040 		.word	1073767754
 543              		.cfi_endproc
 544              	.LFE17:
 545              		.size	Servo_Controller_ReadPeriod, .-Servo_Controller_ReadPeriod
 546              		.global	Servo_Controller_initVar
 547              		.bss
 548              		.set	.LANCHOR0,. + 0
 549              		.type	Servo_Controller_initVar, %object
 550              		.size	Servo_Controller_initVar, 1
 551              	Servo_Controller_initVar:
 552 0000 00       		.space	1
 553              		.text
 554              	.Letext0:
 555              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 556              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 557              		.section	.debug_info,"",%progbits
 558              	.Ldebug_info0:
 559 0000 7E030000 		.4byte	0x37e
 560 0004 0400     		.2byte	0x4
 561 0006 00000000 		.4byte	.Ldebug_abbrev0
 562 000a 04       		.byte	0x4
 563 000b 01       		.uleb128 0x1
 564 000c 0C010000 		.4byte	.LASF43
 565 0010 0C       		.byte	0xc
 566 0011 2B030000 		.4byte	.LASF44
 567 0015 BF010000 		.4byte	.LASF45
 568 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 27


 569 001d 00000000 		.4byte	0
 570 0021 00000000 		.4byte	.Ldebug_line0
 571 0025 02       		.uleb128 0x2
 572 0026 01       		.byte	0x1
 573 0027 06       		.byte	0x6
 574 0028 3D040000 		.4byte	.LASF0
 575 002c 02       		.uleb128 0x2
 576 002d 01       		.byte	0x1
 577 002e 08       		.byte	0x8
 578 002f FE000000 		.4byte	.LASF1
 579 0033 02       		.uleb128 0x2
 580 0034 02       		.byte	0x2
 581 0035 05       		.byte	0x5
 582 0036 14040000 		.4byte	.LASF2
 583 003a 02       		.uleb128 0x2
 584 003b 02       		.byte	0x2
 585 003c 07       		.byte	0x7
 586 003d 74000000 		.4byte	.LASF3
 587 0041 02       		.uleb128 0x2
 588 0042 04       		.byte	0x4
 589 0043 05       		.byte	0x5
 590 0044 23040000 		.4byte	.LASF4
 591 0048 02       		.uleb128 0x2
 592 0049 04       		.byte	0x4
 593 004a 07       		.byte	0x7
 594 004b 9F010000 		.4byte	.LASF5
 595 004f 02       		.uleb128 0x2
 596 0050 08       		.byte	0x8
 597 0051 05       		.byte	0x5
 598 0052 B9030000 		.4byte	.LASF6
 599 0056 02       		.uleb128 0x2
 600 0057 08       		.byte	0x8
 601 0058 07       		.byte	0x7
 602 0059 E7000000 		.4byte	.LASF7
 603 005d 03       		.uleb128 0x3
 604 005e 04       		.byte	0x4
 605 005f 05       		.byte	0x5
 606 0060 696E7400 		.ascii	"int\000"
 607 0064 02       		.uleb128 0x2
 608 0065 04       		.byte	0x4
 609 0066 07       		.byte	0x7
 610 0067 C7020000 		.4byte	.LASF8
 611 006b 04       		.uleb128 0x4
 612 006c B1010000 		.4byte	.LASF12
 613 0070 02       		.byte	0x2
 614 0071 9201     		.2byte	0x192
 615 0073 2C000000 		.4byte	0x2c
 616 0077 02       		.uleb128 0x2
 617 0078 04       		.byte	0x4
 618 0079 04       		.byte	0x4
 619 007a D9000000 		.4byte	.LASF9
 620 007e 02       		.uleb128 0x2
 621 007f 08       		.byte	0x8
 622 0080 04       		.byte	0x4
 623 0081 AC000000 		.4byte	.LASF10
 624 0085 02       		.uleb128 0x2
 625 0086 01       		.byte	0x1
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 28


 626 0087 08       		.byte	0x8
 627 0088 2C040000 		.4byte	.LASF11
 628 008c 04       		.uleb128 0x4
 629 008d 9A010000 		.4byte	.LASF13
 630 0091 02       		.byte	0x2
 631 0092 3C02     		.2byte	0x23c
 632 0094 98000000 		.4byte	0x98
 633 0098 05       		.uleb128 0x5
 634 0099 6B000000 		.4byte	0x6b
 635 009d 02       		.uleb128 0x2
 636 009e 08       		.byte	0x8
 637 009f 04       		.byte	0x4
 638 00a0 31040000 		.4byte	.LASF14
 639 00a4 02       		.uleb128 0x2
 640 00a5 04       		.byte	0x4
 641 00a6 07       		.byte	0x7
 642 00a7 B0030000 		.4byte	.LASF15
 643 00ab 06       		.uleb128 0x6
 644 00ac 67040000 		.4byte	.LASF16
 645 00b0 01       		.byte	0x1
 646 00b1 C7       		.byte	0xc7
 647 00b2 00000000 		.4byte	.LFB2
 648 00b6 10000000 		.4byte	.LFE2-.LFB2
 649 00ba 01       		.uleb128 0x1
 650 00bb 9C       		.byte	0x9c
 651 00bc 06       		.uleb128 0x6
 652 00bd 51040000 		.4byte	.LASF17
 653 00c1 01       		.byte	0x1
 654 00c2 E9       		.byte	0xe9
 655 00c3 00000000 		.4byte	.LFB3
 656 00c7 10000000 		.4byte	.LFE3-.LFB3
 657 00cb 01       		.uleb128 0x1
 658 00cc 9C       		.byte	0x9c
 659 00cd 07       		.uleb128 0x7
 660 00ce 36020000 		.4byte	.LASF18
 661 00d2 01       		.byte	0x1
 662 00d3 9301     		.2byte	0x193
 663 00d5 00000000 		.4byte	.LFB4
 664 00d9 0C000000 		.4byte	.LFE4-.LFB4
 665 00dd 01       		.uleb128 0x1
 666 00de 9C       		.byte	0x9c
 667 00df F2000000 		.4byte	0xf2
 668 00e3 08       		.uleb128 0x8
 669 00e4 DF000000 		.4byte	.LASF20
 670 00e8 01       		.byte	0x1
 671 00e9 9301     		.2byte	0x193
 672 00eb 6B000000 		.4byte	0x6b
 673 00ef 01       		.uleb128 0x1
 674 00f0 50       		.byte	0x50
 675 00f1 00       		.byte	0
 676 00f2 09       		.uleb128 0x9
 677 00f3 F7030000 		.4byte	.LASF27
 678 00f7 01       		.byte	0x1
 679 00f8 A901     		.2byte	0x1a9
 680 00fa 6B000000 		.4byte	0x6b
 681 00fe 00000000 		.4byte	.LFB5
 682 0102 14000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 29


 683 0106 01       		.uleb128 0x1
 684 0107 9C       		.byte	0x9c
 685 0108 07       		.uleb128 0x7
 686 0109 50000000 		.4byte	.LASF19
 687 010d 01       		.byte	0x1
 688 010e E201     		.2byte	0x1e2
 689 0110 00000000 		.4byte	.LFB7
 690 0114 0C000000 		.4byte	.LFE7-.LFB7
 691 0118 01       		.uleb128 0x1
 692 0119 9C       		.byte	0x9c
 693 011a 2D010000 		.4byte	0x12d
 694 011e 08       		.uleb128 0x8
 695 011f 6D000000 		.4byte	.LASF21
 696 0123 01       		.byte	0x1
 697 0124 E201     		.2byte	0x1e2
 698 0126 6B000000 		.4byte	0x6b
 699 012a 01       		.uleb128 0x1
 700 012b 50       		.byte	0x50
 701 012c 00       		.byte	0
 702 012d 07       		.uleb128 0x7
 703 012e 72030000 		.4byte	.LASF22
 704 0132 01       		.byte	0x1
 705 0133 2B02     		.2byte	0x22b
 706 0135 00000000 		.4byte	.LFB8
 707 0139 0C000000 		.4byte	.LFE8-.LFB8
 708 013d 01       		.uleb128 0x1
 709 013e 9C       		.byte	0x9c
 710 013f 52010000 		.4byte	0x152
 711 0143 08       		.uleb128 0x8
 712 0144 49040000 		.4byte	.LASF23
 713 0148 01       		.byte	0x1
 714 0149 2B02     		.2byte	0x22b
 715 014b 6B000000 		.4byte	0x6b
 716 014f 01       		.uleb128 0x1
 717 0150 50       		.byte	0x50
 718 0151 00       		.byte	0
 719 0152 07       		.uleb128 0x7
 720 0153 91030000 		.4byte	.LASF24
 721 0157 01       		.byte	0x1
 722 0158 4802     		.2byte	0x248
 723 015a 00000000 		.4byte	.LFB9
 724 015e 0C000000 		.4byte	.LFE9-.LFB9
 725 0162 01       		.uleb128 0x1
 726 0163 9C       		.byte	0x9c
 727 0164 77010000 		.4byte	0x177
 728 0168 08       		.uleb128 0x8
 729 0169 49040000 		.4byte	.LASF23
 730 016d 01       		.byte	0x1
 731 016e 4802     		.2byte	0x248
 732 0170 6B000000 		.4byte	0x6b
 733 0174 01       		.uleb128 0x1
 734 0175 50       		.byte	0x50
 735 0176 00       		.byte	0
 736 0177 07       		.uleb128 0x7
 737 0178 C7030000 		.4byte	.LASF25
 738 017c 01       		.byte	0x1
 739 017d AC02     		.2byte	0x2ac
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 30


 740 017f 00000000 		.4byte	.LFB10
 741 0183 0C000000 		.4byte	.LFE10-.LFB10
 742 0187 01       		.uleb128 0x1
 743 0188 9C       		.byte	0x9c
 744 0189 9C010000 		.4byte	0x19c
 745 018d 08       		.uleb128 0x8
 746 018e E9030000 		.4byte	.LASF26
 747 0192 01       		.byte	0x1
 748 0193 AC02     		.2byte	0x2ac
 749 0195 6B000000 		.4byte	0x6b
 750 0199 01       		.uleb128 0x1
 751 019a 50       		.byte	0x50
 752 019b 00       		.byte	0
 753 019c 09       		.uleb128 0x9
 754 019d 07030000 		.4byte	.LASF28
 755 01a1 01       		.byte	0x1
 756 01a2 C702     		.2byte	0x2c7
 757 01a4 6B000000 		.4byte	0x6b
 758 01a8 00000000 		.4byte	.LFB11
 759 01ac 0C000000 		.4byte	.LFE11-.LFB11
 760 01b0 01       		.uleb128 0x1
 761 01b1 9C       		.byte	0x9c
 762 01b2 0A       		.uleb128 0xa
 763 01b3 87000000 		.4byte	.LASF46
 764 01b7 01       		.byte	0x1
 765 01b8 E102     		.2byte	0x2e1
 766 01ba 6B000000 		.4byte	0x6b
 767 01be 00000000 		.4byte	.LFB12
 768 01c2 0C000000 		.4byte	.LFE12-.LFB12
 769 01c6 01       		.uleb128 0x1
 770 01c7 9C       		.byte	0x9c
 771 01c8 DB010000 		.4byte	0x1db
 772 01cc 0B       		.uleb128 0xb
 773 01cd 55030000 		.4byte	.LASF34
 774 01d1 01       		.byte	0x1
 775 01d2 E302     		.2byte	0x2e3
 776 01d4 6B000000 		.4byte	0x6b
 777 01d8 01       		.uleb128 0x1
 778 01d9 50       		.byte	0x50
 779 01da 00       		.byte	0
 780 01db 07       		.uleb128 0x7
 781 01dc B3000000 		.4byte	.LASF29
 782 01e0 01       		.byte	0x1
 783 01e1 FD02     		.2byte	0x2fd
 784 01e3 00000000 		.4byte	.LFB13
 785 01e7 0C000000 		.4byte	.LFE13-.LFB13
 786 01eb 01       		.uleb128 0x1
 787 01ec 9C       		.byte	0x9c
 788 01ed 00020000 		.4byte	0x200
 789 01f1 08       		.uleb128 0x8
 790 01f2 B7010000 		.4byte	.LASF30
 791 01f6 01       		.byte	0x1
 792 01f7 FD02     		.2byte	0x2fd
 793 01f9 6B000000 		.4byte	0x6b
 794 01fd 01       		.uleb128 0x1
 795 01fe 50       		.byte	0x50
 796 01ff 00       		.byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 31


 797 0200 09       		.uleb128 0x9
 798 0201 D4020000 		.4byte	.LASF31
 799 0205 01       		.byte	0x1
 800 0206 1603     		.2byte	0x316
 801 0208 6B000000 		.4byte	0x6b
 802 020c 00000000 		.4byte	.LFB14
 803 0210 0C000000 		.4byte	.LFE14-.LFB14
 804 0214 01       		.uleb128 0x1
 805 0215 9C       		.byte	0x9c
 806 0216 07       		.uleb128 0x7
 807 0217 19000000 		.4byte	.LASF32
 808 021b 01       		.byte	0x1
 809 021c C501     		.2byte	0x1c5
 810 021e 00000000 		.4byte	.LFB6
 811 0222 14000000 		.4byte	.LFE6-.LFB6
 812 0226 01       		.uleb128 0x1
 813 0227 9C       		.byte	0x9c
 814 0228 3F020000 		.4byte	0x23f
 815 022c 0C       		.uleb128 0xc
 816 022d 08000000 		.4byte	.LVL7
 817 0231 00020000 		.4byte	0x200
 818 0235 0C       		.uleb128 0xc
 819 0236 0C000000 		.4byte	.LVL8
 820 023a 9C010000 		.4byte	0x19c
 821 023e 00       		.byte	0
 822 023f 0D       		.uleb128 0xd
 823 0240 5C030000 		.4byte	.LASF33
 824 0244 01       		.byte	0x1
 825 0245 54       		.byte	0x54
 826 0246 00000000 		.4byte	.LFB1
 827 024a 58000000 		.4byte	.LFE1-.LFB1
 828 024e 01       		.uleb128 0x1
 829 024f 9C       		.byte	0x9c
 830 0250 F0020000 		.4byte	0x2f0
 831 0254 0E       		.uleb128 0xe
 832 0255 1E040000 		.4byte	.LASF35
 833 0259 01       		.byte	0x1
 834 025a 57       		.byte	0x57
 835 025b 6B000000 		.4byte	0x6b
 836 025f 00000000 		.4byte	.LLST0
 837 0263 0E       		.uleb128 0xe
 838 0264 54020000 		.4byte	.LASF36
 839 0268 01       		.byte	0x1
 840 0269 5D       		.byte	0x5d
 841 026a 6B000000 		.4byte	0x6b
 842 026e 13000000 		.4byte	.LLST1
 843 0272 0F       		.uleb128 0xf
 844 0273 20000000 		.4byte	.LVL11
 845 0277 CD000000 		.4byte	0xcd
 846 027b 86020000 		.4byte	0x286
 847 027f 10       		.uleb128 0x10
 848 0280 01       		.uleb128 0x1
 849 0281 50       		.byte	0x50
 850 0282 02       		.uleb128 0x2
 851 0283 08       		.byte	0x8
 852 0284 64       		.byte	0x64
 853 0285 00       		.byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 32


 854 0286 0F       		.uleb128 0xf
 855 0287 26000000 		.4byte	.LVL12
 856 028b 08010000 		.4byte	0x108
 857 028f 9A020000 		.4byte	0x29a
 858 0293 10       		.uleb128 0x10
 859 0294 01       		.uleb128 0x1
 860 0295 50       		.byte	0x50
 861 0296 02       		.uleb128 0x2
 862 0297 08       		.byte	0x8
 863 0298 64       		.byte	0x64
 864 0299 00       		.byte	0
 865 029a 0F       		.uleb128 0xf
 866 029b 2C000000 		.4byte	.LVL13
 867 029f 2D010000 		.4byte	0x12d
 868 02a3 AD020000 		.4byte	0x2ad
 869 02a7 10       		.uleb128 0x10
 870 02a8 01       		.uleb128 0x1
 871 02a9 50       		.byte	0x50
 872 02aa 01       		.uleb128 0x1
 873 02ab 35       		.byte	0x35
 874 02ac 00       		.byte	0
 875 02ad 0F       		.uleb128 0xf
 876 02ae 32000000 		.4byte	.LVL14
 877 02b2 52010000 		.4byte	0x152
 878 02b6 C1020000 		.4byte	0x2c1
 879 02ba 10       		.uleb128 0x10
 880 02bb 01       		.uleb128 0x1
 881 02bc 50       		.byte	0x50
 882 02bd 02       		.uleb128 0x2
 883 02be 08       		.byte	0x8
 884 02bf 3F       		.byte	0x3f
 885 02c0 00       		.byte	0
 886 02c1 0F       		.uleb128 0xf
 887 02c2 38000000 		.4byte	.LVL15
 888 02c6 77010000 		.4byte	0x177
 889 02ca D4020000 		.4byte	0x2d4
 890 02ce 10       		.uleb128 0x10
 891 02cf 01       		.uleb128 0x1
 892 02d0 50       		.byte	0x50
 893 02d1 01       		.uleb128 0x1
 894 02d2 30       		.byte	0x30
 895 02d3 00       		.byte	0
 896 02d4 0C       		.uleb128 0xc
 897 02d5 3C000000 		.4byte	.LVL16
 898 02d9 6B030000 		.4byte	0x36b
 899 02dd 0C       		.uleb128 0xc
 900 02de 48000000 		.4byte	.LVL17
 901 02e2 76030000 		.4byte	0x376
 902 02e6 0C       		.uleb128 0xc
 903 02e7 4C000000 		.4byte	.LVL18
 904 02eb 16020000 		.4byte	0x216
 905 02ef 00       		.byte	0
 906 02f0 0D       		.uleb128 0xd
 907 02f1 1F020000 		.4byte	.LASF37
 908 02f5 01       		.byte	0x1
 909 02f6 37       		.byte	0x37
 910 02f7 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 33


 911 02fb 1C000000 		.4byte	.LFE0-.LFB0
 912 02ff 01       		.uleb128 0x1
 913 0300 9C       		.byte	0x9c
 914 0301 18030000 		.4byte	0x318
 915 0305 0C       		.uleb128 0xc
 916 0306 0C000000 		.4byte	.LVL19
 917 030a 3F020000 		.4byte	0x23f
 918 030e 0C       		.uleb128 0xc
 919 030f 16000000 		.4byte	.LVL20
 920 0313 AB000000 		.4byte	0xab
 921 0317 00       		.byte	0
 922 0318 09       		.uleb128 0x9
 923 0319 74020000 		.4byte	.LASF38
 924 031d 01       		.byte	0x1
 925 031e 4A03     		.2byte	0x34a
 926 0320 6B000000 		.4byte	0x6b
 927 0324 00000000 		.4byte	.LFB15
 928 0328 0C000000 		.4byte	.LFE15-.LFB15
 929 032c 01       		.uleb128 0x1
 930 032d 9C       		.byte	0x9c
 931 032e 09       		.uleb128 0x9
 932 032f 92020000 		.4byte	.LASF39
 933 0333 01       		.byte	0x1
 934 0334 5E03     		.2byte	0x35e
 935 0336 6B000000 		.4byte	0x6b
 936 033a 00000000 		.4byte	.LFB16
 937 033e 0C000000 		.4byte	.LFE16-.LFB16
 938 0342 01       		.uleb128 0x1
 939 0343 9C       		.byte	0x9c
 940 0344 09       		.uleb128 0x9
 941 0345 34000000 		.4byte	.LASF40
 942 0349 01       		.byte	0x1
 943 034a 7403     		.2byte	0x374
 944 034c 6B000000 		.4byte	0x6b
 945 0350 00000000 		.4byte	.LFB17
 946 0354 0C000000 		.4byte	.LFE17-.LFB17
 947 0358 01       		.uleb128 0x1
 948 0359 9C       		.byte	0x9c
 949 035a 11       		.uleb128 0x11
 950 035b 00000000 		.4byte	.LASF47
 951 035f 01       		.byte	0x1
 952 0360 20       		.byte	0x20
 953 0361 6B000000 		.4byte	0x6b
 954 0365 05       		.uleb128 0x5
 955 0366 03       		.byte	0x3
 956 0367 00000000 		.4byte	Servo_Controller_initVar
 957 036b 12       		.uleb128 0x12
 958 036c B0020000 		.4byte	.LASF41
 959 0370 B0020000 		.4byte	.LASF41
 960 0374 03       		.byte	0x3
 961 0375 7D       		.byte	0x7d
 962 0376 12       		.uleb128 0x12
 963 0377 F1020000 		.4byte	.LASF42
 964 037b F1020000 		.4byte	.LASF42
 965 037f 03       		.byte	0x3
 966 0380 7E       		.byte	0x7e
 967 0381 00       		.byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 34


 968              		.section	.debug_abbrev,"",%progbits
 969              	.Ldebug_abbrev0:
 970 0000 01       		.uleb128 0x1
 971 0001 11       		.uleb128 0x11
 972 0002 01       		.byte	0x1
 973 0003 25       		.uleb128 0x25
 974 0004 0E       		.uleb128 0xe
 975 0005 13       		.uleb128 0x13
 976 0006 0B       		.uleb128 0xb
 977 0007 03       		.uleb128 0x3
 978 0008 0E       		.uleb128 0xe
 979 0009 1B       		.uleb128 0x1b
 980 000a 0E       		.uleb128 0xe
 981 000b 55       		.uleb128 0x55
 982 000c 17       		.uleb128 0x17
 983 000d 11       		.uleb128 0x11
 984 000e 01       		.uleb128 0x1
 985 000f 10       		.uleb128 0x10
 986 0010 17       		.uleb128 0x17
 987 0011 00       		.byte	0
 988 0012 00       		.byte	0
 989 0013 02       		.uleb128 0x2
 990 0014 24       		.uleb128 0x24
 991 0015 00       		.byte	0
 992 0016 0B       		.uleb128 0xb
 993 0017 0B       		.uleb128 0xb
 994 0018 3E       		.uleb128 0x3e
 995 0019 0B       		.uleb128 0xb
 996 001a 03       		.uleb128 0x3
 997 001b 0E       		.uleb128 0xe
 998 001c 00       		.byte	0
 999 001d 00       		.byte	0
 1000 001e 03       		.uleb128 0x3
 1001 001f 24       		.uleb128 0x24
 1002 0020 00       		.byte	0
 1003 0021 0B       		.uleb128 0xb
 1004 0022 0B       		.uleb128 0xb
 1005 0023 3E       		.uleb128 0x3e
 1006 0024 0B       		.uleb128 0xb
 1007 0025 03       		.uleb128 0x3
 1008 0026 08       		.uleb128 0x8
 1009 0027 00       		.byte	0
 1010 0028 00       		.byte	0
 1011 0029 04       		.uleb128 0x4
 1012 002a 16       		.uleb128 0x16
 1013 002b 00       		.byte	0
 1014 002c 03       		.uleb128 0x3
 1015 002d 0E       		.uleb128 0xe
 1016 002e 3A       		.uleb128 0x3a
 1017 002f 0B       		.uleb128 0xb
 1018 0030 3B       		.uleb128 0x3b
 1019 0031 05       		.uleb128 0x5
 1020 0032 49       		.uleb128 0x49
 1021 0033 13       		.uleb128 0x13
 1022 0034 00       		.byte	0
 1023 0035 00       		.byte	0
 1024 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 35


 1025 0037 35       		.uleb128 0x35
 1026 0038 00       		.byte	0
 1027 0039 49       		.uleb128 0x49
 1028 003a 13       		.uleb128 0x13
 1029 003b 00       		.byte	0
 1030 003c 00       		.byte	0
 1031 003d 06       		.uleb128 0x6
 1032 003e 2E       		.uleb128 0x2e
 1033 003f 00       		.byte	0
 1034 0040 3F       		.uleb128 0x3f
 1035 0041 19       		.uleb128 0x19
 1036 0042 03       		.uleb128 0x3
 1037 0043 0E       		.uleb128 0xe
 1038 0044 3A       		.uleb128 0x3a
 1039 0045 0B       		.uleb128 0xb
 1040 0046 3B       		.uleb128 0x3b
 1041 0047 0B       		.uleb128 0xb
 1042 0048 27       		.uleb128 0x27
 1043 0049 19       		.uleb128 0x19
 1044 004a 11       		.uleb128 0x11
 1045 004b 01       		.uleb128 0x1
 1046 004c 12       		.uleb128 0x12
 1047 004d 06       		.uleb128 0x6
 1048 004e 40       		.uleb128 0x40
 1049 004f 18       		.uleb128 0x18
 1050 0050 9742     		.uleb128 0x2117
 1051 0052 19       		.uleb128 0x19
 1052 0053 00       		.byte	0
 1053 0054 00       		.byte	0
 1054 0055 07       		.uleb128 0x7
 1055 0056 2E       		.uleb128 0x2e
 1056 0057 01       		.byte	0x1
 1057 0058 3F       		.uleb128 0x3f
 1058 0059 19       		.uleb128 0x19
 1059 005a 03       		.uleb128 0x3
 1060 005b 0E       		.uleb128 0xe
 1061 005c 3A       		.uleb128 0x3a
 1062 005d 0B       		.uleb128 0xb
 1063 005e 3B       		.uleb128 0x3b
 1064 005f 05       		.uleb128 0x5
 1065 0060 27       		.uleb128 0x27
 1066 0061 19       		.uleb128 0x19
 1067 0062 11       		.uleb128 0x11
 1068 0063 01       		.uleb128 0x1
 1069 0064 12       		.uleb128 0x12
 1070 0065 06       		.uleb128 0x6
 1071 0066 40       		.uleb128 0x40
 1072 0067 18       		.uleb128 0x18
 1073 0068 9742     		.uleb128 0x2117
 1074 006a 19       		.uleb128 0x19
 1075 006b 01       		.uleb128 0x1
 1076 006c 13       		.uleb128 0x13
 1077 006d 00       		.byte	0
 1078 006e 00       		.byte	0
 1079 006f 08       		.uleb128 0x8
 1080 0070 05       		.uleb128 0x5
 1081 0071 00       		.byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 36


 1082 0072 03       		.uleb128 0x3
 1083 0073 0E       		.uleb128 0xe
 1084 0074 3A       		.uleb128 0x3a
 1085 0075 0B       		.uleb128 0xb
 1086 0076 3B       		.uleb128 0x3b
 1087 0077 05       		.uleb128 0x5
 1088 0078 49       		.uleb128 0x49
 1089 0079 13       		.uleb128 0x13
 1090 007a 02       		.uleb128 0x2
 1091 007b 18       		.uleb128 0x18
 1092 007c 00       		.byte	0
 1093 007d 00       		.byte	0
 1094 007e 09       		.uleb128 0x9
 1095 007f 2E       		.uleb128 0x2e
 1096 0080 00       		.byte	0
 1097 0081 3F       		.uleb128 0x3f
 1098 0082 19       		.uleb128 0x19
 1099 0083 03       		.uleb128 0x3
 1100 0084 0E       		.uleb128 0xe
 1101 0085 3A       		.uleb128 0x3a
 1102 0086 0B       		.uleb128 0xb
 1103 0087 3B       		.uleb128 0x3b
 1104 0088 05       		.uleb128 0x5
 1105 0089 27       		.uleb128 0x27
 1106 008a 19       		.uleb128 0x19
 1107 008b 49       		.uleb128 0x49
 1108 008c 13       		.uleb128 0x13
 1109 008d 11       		.uleb128 0x11
 1110 008e 01       		.uleb128 0x1
 1111 008f 12       		.uleb128 0x12
 1112 0090 06       		.uleb128 0x6
 1113 0091 40       		.uleb128 0x40
 1114 0092 18       		.uleb128 0x18
 1115 0093 9742     		.uleb128 0x2117
 1116 0095 19       		.uleb128 0x19
 1117 0096 00       		.byte	0
 1118 0097 00       		.byte	0
 1119 0098 0A       		.uleb128 0xa
 1120 0099 2E       		.uleb128 0x2e
 1121 009a 01       		.byte	0x1
 1122 009b 3F       		.uleb128 0x3f
 1123 009c 19       		.uleb128 0x19
 1124 009d 03       		.uleb128 0x3
 1125 009e 0E       		.uleb128 0xe
 1126 009f 3A       		.uleb128 0x3a
 1127 00a0 0B       		.uleb128 0xb
 1128 00a1 3B       		.uleb128 0x3b
 1129 00a2 05       		.uleb128 0x5
 1130 00a3 27       		.uleb128 0x27
 1131 00a4 19       		.uleb128 0x19
 1132 00a5 49       		.uleb128 0x49
 1133 00a6 13       		.uleb128 0x13
 1134 00a7 11       		.uleb128 0x11
 1135 00a8 01       		.uleb128 0x1
 1136 00a9 12       		.uleb128 0x12
 1137 00aa 06       		.uleb128 0x6
 1138 00ab 40       		.uleb128 0x40
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 37


 1139 00ac 18       		.uleb128 0x18
 1140 00ad 9742     		.uleb128 0x2117
 1141 00af 19       		.uleb128 0x19
 1142 00b0 01       		.uleb128 0x1
 1143 00b1 13       		.uleb128 0x13
 1144 00b2 00       		.byte	0
 1145 00b3 00       		.byte	0
 1146 00b4 0B       		.uleb128 0xb
 1147 00b5 34       		.uleb128 0x34
 1148 00b6 00       		.byte	0
 1149 00b7 03       		.uleb128 0x3
 1150 00b8 0E       		.uleb128 0xe
 1151 00b9 3A       		.uleb128 0x3a
 1152 00ba 0B       		.uleb128 0xb
 1153 00bb 3B       		.uleb128 0x3b
 1154 00bc 05       		.uleb128 0x5
 1155 00bd 49       		.uleb128 0x49
 1156 00be 13       		.uleb128 0x13
 1157 00bf 02       		.uleb128 0x2
 1158 00c0 18       		.uleb128 0x18
 1159 00c1 00       		.byte	0
 1160 00c2 00       		.byte	0
 1161 00c3 0C       		.uleb128 0xc
 1162 00c4 898201   		.uleb128 0x4109
 1163 00c7 00       		.byte	0
 1164 00c8 11       		.uleb128 0x11
 1165 00c9 01       		.uleb128 0x1
 1166 00ca 31       		.uleb128 0x31
 1167 00cb 13       		.uleb128 0x13
 1168 00cc 00       		.byte	0
 1169 00cd 00       		.byte	0
 1170 00ce 0D       		.uleb128 0xd
 1171 00cf 2E       		.uleb128 0x2e
 1172 00d0 01       		.byte	0x1
 1173 00d1 3F       		.uleb128 0x3f
 1174 00d2 19       		.uleb128 0x19
 1175 00d3 03       		.uleb128 0x3
 1176 00d4 0E       		.uleb128 0xe
 1177 00d5 3A       		.uleb128 0x3a
 1178 00d6 0B       		.uleb128 0xb
 1179 00d7 3B       		.uleb128 0x3b
 1180 00d8 0B       		.uleb128 0xb
 1181 00d9 27       		.uleb128 0x27
 1182 00da 19       		.uleb128 0x19
 1183 00db 11       		.uleb128 0x11
 1184 00dc 01       		.uleb128 0x1
 1185 00dd 12       		.uleb128 0x12
 1186 00de 06       		.uleb128 0x6
 1187 00df 40       		.uleb128 0x40
 1188 00e0 18       		.uleb128 0x18
 1189 00e1 9742     		.uleb128 0x2117
 1190 00e3 19       		.uleb128 0x19
 1191 00e4 01       		.uleb128 0x1
 1192 00e5 13       		.uleb128 0x13
 1193 00e6 00       		.byte	0
 1194 00e7 00       		.byte	0
 1195 00e8 0E       		.uleb128 0xe
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 38


 1196 00e9 34       		.uleb128 0x34
 1197 00ea 00       		.byte	0
 1198 00eb 03       		.uleb128 0x3
 1199 00ec 0E       		.uleb128 0xe
 1200 00ed 3A       		.uleb128 0x3a
 1201 00ee 0B       		.uleb128 0xb
 1202 00ef 3B       		.uleb128 0x3b
 1203 00f0 0B       		.uleb128 0xb
 1204 00f1 49       		.uleb128 0x49
 1205 00f2 13       		.uleb128 0x13
 1206 00f3 02       		.uleb128 0x2
 1207 00f4 17       		.uleb128 0x17
 1208 00f5 00       		.byte	0
 1209 00f6 00       		.byte	0
 1210 00f7 0F       		.uleb128 0xf
 1211 00f8 898201   		.uleb128 0x4109
 1212 00fb 01       		.byte	0x1
 1213 00fc 11       		.uleb128 0x11
 1214 00fd 01       		.uleb128 0x1
 1215 00fe 31       		.uleb128 0x31
 1216 00ff 13       		.uleb128 0x13
 1217 0100 01       		.uleb128 0x1
 1218 0101 13       		.uleb128 0x13
 1219 0102 00       		.byte	0
 1220 0103 00       		.byte	0
 1221 0104 10       		.uleb128 0x10
 1222 0105 8A8201   		.uleb128 0x410a
 1223 0108 00       		.byte	0
 1224 0109 02       		.uleb128 0x2
 1225 010a 18       		.uleb128 0x18
 1226 010b 9142     		.uleb128 0x2111
 1227 010d 18       		.uleb128 0x18
 1228 010e 00       		.byte	0
 1229 010f 00       		.byte	0
 1230 0110 11       		.uleb128 0x11
 1231 0111 34       		.uleb128 0x34
 1232 0112 00       		.byte	0
 1233 0113 03       		.uleb128 0x3
 1234 0114 0E       		.uleb128 0xe
 1235 0115 3A       		.uleb128 0x3a
 1236 0116 0B       		.uleb128 0xb
 1237 0117 3B       		.uleb128 0x3b
 1238 0118 0B       		.uleb128 0xb
 1239 0119 49       		.uleb128 0x49
 1240 011a 13       		.uleb128 0x13
 1241 011b 3F       		.uleb128 0x3f
 1242 011c 19       		.uleb128 0x19
 1243 011d 02       		.uleb128 0x2
 1244 011e 18       		.uleb128 0x18
 1245 011f 00       		.byte	0
 1246 0120 00       		.byte	0
 1247 0121 12       		.uleb128 0x12
 1248 0122 2E       		.uleb128 0x2e
 1249 0123 00       		.byte	0
 1250 0124 3F       		.uleb128 0x3f
 1251 0125 19       		.uleb128 0x19
 1252 0126 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 39


 1253 0127 19       		.uleb128 0x19
 1254 0128 6E       		.uleb128 0x6e
 1255 0129 0E       		.uleb128 0xe
 1256 012a 03       		.uleb128 0x3
 1257 012b 0E       		.uleb128 0xe
 1258 012c 3A       		.uleb128 0x3a
 1259 012d 0B       		.uleb128 0xb
 1260 012e 3B       		.uleb128 0x3b
 1261 012f 0B       		.uleb128 0xb
 1262 0130 00       		.byte	0
 1263 0131 00       		.byte	0
 1264 0132 00       		.byte	0
 1265              		.section	.debug_loc,"",%progbits
 1266              	.Ldebug_loc0:
 1267              	.LLST0:
 1268 0000 0A000000 		.4byte	.LVL9
 1269 0004 0E000000 		.4byte	.LVL10
 1270 0008 0100     		.2byte	0x1
 1271 000a 53       		.byte	0x53
 1272 000b 00000000 		.4byte	0
 1273 000f 00000000 		.4byte	0
 1274              	.LLST1:
 1275 0013 3C000000 		.4byte	.LVL16
 1276 0017 47000000 		.4byte	.LVL17-1
 1277 001b 0100     		.2byte	0x1
 1278 001d 50       		.byte	0x50
 1279 001e 00000000 		.4byte	0
 1280 0022 00000000 		.4byte	0
 1281              		.section	.debug_aranges,"",%progbits
 1282 0000 A4000000 		.4byte	0xa4
 1283 0004 0200     		.2byte	0x2
 1284 0006 00000000 		.4byte	.Ldebug_info0
 1285 000a 04       		.byte	0x4
 1286 000b 00       		.byte	0
 1287 000c 0000     		.2byte	0
 1288 000e 0000     		.2byte	0
 1289 0010 00000000 		.4byte	.LFB2
 1290 0014 10000000 		.4byte	.LFE2-.LFB2
 1291 0018 00000000 		.4byte	.LFB3
 1292 001c 10000000 		.4byte	.LFE3-.LFB3
 1293 0020 00000000 		.4byte	.LFB4
 1294 0024 0C000000 		.4byte	.LFE4-.LFB4
 1295 0028 00000000 		.4byte	.LFB5
 1296 002c 14000000 		.4byte	.LFE5-.LFB5
 1297 0030 00000000 		.4byte	.LFB7
 1298 0034 0C000000 		.4byte	.LFE7-.LFB7
 1299 0038 00000000 		.4byte	.LFB8
 1300 003c 0C000000 		.4byte	.LFE8-.LFB8
 1301 0040 00000000 		.4byte	.LFB9
 1302 0044 0C000000 		.4byte	.LFE9-.LFB9
 1303 0048 00000000 		.4byte	.LFB10
 1304 004c 0C000000 		.4byte	.LFE10-.LFB10
 1305 0050 00000000 		.4byte	.LFB11
 1306 0054 0C000000 		.4byte	.LFE11-.LFB11
 1307 0058 00000000 		.4byte	.LFB12
 1308 005c 0C000000 		.4byte	.LFE12-.LFB12
 1309 0060 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 40


 1310 0064 0C000000 		.4byte	.LFE13-.LFB13
 1311 0068 00000000 		.4byte	.LFB14
 1312 006c 0C000000 		.4byte	.LFE14-.LFB14
 1313 0070 00000000 		.4byte	.LFB6
 1314 0074 14000000 		.4byte	.LFE6-.LFB6
 1315 0078 00000000 		.4byte	.LFB1
 1316 007c 58000000 		.4byte	.LFE1-.LFB1
 1317 0080 00000000 		.4byte	.LFB0
 1318 0084 1C000000 		.4byte	.LFE0-.LFB0
 1319 0088 00000000 		.4byte	.LFB15
 1320 008c 0C000000 		.4byte	.LFE15-.LFB15
 1321 0090 00000000 		.4byte	.LFB16
 1322 0094 0C000000 		.4byte	.LFE16-.LFB16
 1323 0098 00000000 		.4byte	.LFB17
 1324 009c 0C000000 		.4byte	.LFE17-.LFB17
 1325 00a0 00000000 		.4byte	0
 1326 00a4 00000000 		.4byte	0
 1327              		.section	.debug_ranges,"",%progbits
 1328              	.Ldebug_ranges0:
 1329 0000 00000000 		.4byte	.LFB2
 1330 0004 10000000 		.4byte	.LFE2
 1331 0008 00000000 		.4byte	.LFB3
 1332 000c 10000000 		.4byte	.LFE3
 1333 0010 00000000 		.4byte	.LFB4
 1334 0014 0C000000 		.4byte	.LFE4
 1335 0018 00000000 		.4byte	.LFB5
 1336 001c 14000000 		.4byte	.LFE5
 1337 0020 00000000 		.4byte	.LFB7
 1338 0024 0C000000 		.4byte	.LFE7
 1339 0028 00000000 		.4byte	.LFB8
 1340 002c 0C000000 		.4byte	.LFE8
 1341 0030 00000000 		.4byte	.LFB9
 1342 0034 0C000000 		.4byte	.LFE9
 1343 0038 00000000 		.4byte	.LFB10
 1344 003c 0C000000 		.4byte	.LFE10
 1345 0040 00000000 		.4byte	.LFB11
 1346 0044 0C000000 		.4byte	.LFE11
 1347 0048 00000000 		.4byte	.LFB12
 1348 004c 0C000000 		.4byte	.LFE12
 1349 0050 00000000 		.4byte	.LFB13
 1350 0054 0C000000 		.4byte	.LFE13
 1351 0058 00000000 		.4byte	.LFB14
 1352 005c 0C000000 		.4byte	.LFE14
 1353 0060 00000000 		.4byte	.LFB6
 1354 0064 14000000 		.4byte	.LFE6
 1355 0068 00000000 		.4byte	.LFB1
 1356 006c 58000000 		.4byte	.LFE1
 1357 0070 00000000 		.4byte	.LFB0
 1358 0074 1C000000 		.4byte	.LFE0
 1359 0078 00000000 		.4byte	.LFB15
 1360 007c 0C000000 		.4byte	.LFE15
 1361 0080 00000000 		.4byte	.LFB16
 1362 0084 0C000000 		.4byte	.LFE16
 1363 0088 00000000 		.4byte	.LFB17
 1364 008c 0C000000 		.4byte	.LFE17
 1365 0090 00000000 		.4byte	0
 1366 0094 00000000 		.4byte	0
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 41


 1367              		.section	.debug_line,"",%progbits
 1368              	.Ldebug_line0:
 1369 0000 B0010000 		.section	.debug_str,"MS",%progbits,1
 1369      02005800 
 1369      00000201 
 1369      FB0E0D00 
 1369      01010101 
 1370              	.LASF47:
 1371 0000 53657276 		.ascii	"Servo_Controller_initVar\000"
 1371      6F5F436F 
 1371      6E74726F 
 1371      6C6C6572 
 1371      5F696E69 
 1372              	.LASF32:
 1373 0019 53657276 		.ascii	"Servo_Controller_ClearFIFO\000"
 1373      6F5F436F 
 1373      6E74726F 
 1373      6C6C6572 
 1373      5F436C65 
 1374              	.LASF40:
 1375 0034 53657276 		.ascii	"Servo_Controller_ReadPeriod\000"
 1375      6F5F436F 
 1375      6E74726F 
 1375      6C6C6572 
 1375      5F526561 
 1376              	.LASF19:
 1377 0050 53657276 		.ascii	"Servo_Controller_WritePeriod\000"
 1377      6F5F436F 
 1377      6E74726F 
 1377      6C6C6572 
 1377      5F577269 
 1378              	.LASF21:
 1379 006d 70657269 		.ascii	"period\000"
 1379      6F6400
 1380              	.LASF3:
 1381 0074 73686F72 		.ascii	"short unsigned int\000"
 1381      7420756E 
 1381      7369676E 
 1381      65642069 
 1381      6E7400
 1382              	.LASF46:
 1383 0087 53657276 		.ascii	"Servo_Controller_ReadControlRegister\000"
 1383      6F5F436F 
 1383      6E74726F 
 1383      6C6C6572 
 1383      5F526561 
 1384              	.LASF10:
 1385 00ac 646F7562 		.ascii	"double\000"
 1385      6C6500
 1386              	.LASF29:
 1387 00b3 53657276 		.ascii	"Servo_Controller_WriteControlRegister\000"
 1387      6F5F436F 
 1387      6E74726F 
 1387      6C6C6572 
 1387      5F577269 
 1388              	.LASF9:
 1389 00d9 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 42


 1389      7400
 1390              	.LASF20:
 1391 00df 636F756E 		.ascii	"counter\000"
 1391      74657200 
 1392              	.LASF7:
 1393 00e7 6C6F6E67 		.ascii	"long long unsigned int\000"
 1393      206C6F6E 
 1393      6720756E 
 1393      7369676E 
 1393      65642069 
 1394              	.LASF1:
 1395 00fe 756E7369 		.ascii	"unsigned char\000"
 1395      676E6564 
 1395      20636861 
 1395      7200
 1396              	.LASF43:
 1397 010c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1397      43313120 
 1397      352E342E 
 1397      31203230 
 1397      31363036 
 1398 013f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1398      20726576 
 1398      6973696F 
 1398      6E203233 
 1398      37373135 
 1399 0172 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1399      66756E63 
 1399      74696F6E 
 1399      2D736563 
 1399      74696F6E 
 1400              	.LASF13:
 1401 019a 72656738 		.ascii	"reg8\000"
 1401      00
 1402              	.LASF5:
 1403 019f 6C6F6E67 		.ascii	"long unsigned int\000"
 1403      20756E73 
 1403      69676E65 
 1403      6420696E 
 1403      7400
 1404              	.LASF12:
 1405 01b1 75696E74 		.ascii	"uint8\000"
 1405      3800
 1406              	.LASF30:
 1407 01b7 636F6E74 		.ascii	"control\000"
 1407      726F6C00 
 1408              	.LASF45:
 1409 01bf 503A5C43 		.ascii	"P:\\Cypress_Tutorials_Working_Directory\\MCU101_Cyp"
 1409      79707265 
 1409      73735F54 
 1409      75746F72 
 1409      69616C73 
 1410 01f0 72657373 		.ascii	"ress_PSOC5_Labs\\Lessons\\Overview_Lecture.cydsn\000"
 1410      5F50534F 
 1410      43355F4C 
 1410      6162735C 
 1410      4C657373 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 43


 1411              	.LASF37:
 1412 021f 53657276 		.ascii	"Servo_Controller_Start\000"
 1412      6F5F436F 
 1412      6E74726F 
 1412      6C6C6572 
 1412      5F537461 
 1413              	.LASF18:
 1414 0236 53657276 		.ascii	"Servo_Controller_WriteCounter\000"
 1414      6F5F436F 
 1414      6E74726F 
 1414      6C6C6572 
 1414      5F577269 
 1415              	.LASF36:
 1416 0254 53657276 		.ascii	"Servo_Controller_interruptState\000"
 1416      6F5F436F 
 1416      6E74726F 
 1416      6C6C6572 
 1416      5F696E74 
 1417              	.LASF38:
 1418 0274 53657276 		.ascii	"Servo_Controller_ReadCompare1\000"
 1418      6F5F436F 
 1418      6E74726F 
 1418      6C6C6572 
 1418      5F526561 
 1419              	.LASF39:
 1420 0292 53657276 		.ascii	"Servo_Controller_ReadCompare2\000"
 1420      6F5F436F 
 1420      6E74726F 
 1420      6C6C6572 
 1420      5F526561 
 1421              	.LASF41:
 1422 02b0 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1422      74657243 
 1422      72697469 
 1422      63616C53 
 1422      65637469 
 1423              	.LASF8:
 1424 02c7 756E7369 		.ascii	"unsigned int\000"
 1424      676E6564 
 1424      20696E74 
 1424      00
 1425              	.LASF31:
 1426 02d4 53657276 		.ascii	"Servo_Controller_ReadCapture\000"
 1426      6F5F436F 
 1426      6E74726F 
 1426      6C6C6572 
 1426      5F526561 
 1427              	.LASF42:
 1428 02f1 43794578 		.ascii	"CyExitCriticalSection\000"
 1428      69744372 
 1428      69746963 
 1428      616C5365 
 1428      6374696F 
 1429              	.LASF28:
 1430 0307 53657276 		.ascii	"Servo_Controller_ReadStatusRegister\000"
 1430      6F5F436F 
 1430      6E74726F 
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 44


 1430      6C6C6572 
 1430      5F526561 
 1431              	.LASF44:
 1432 032b 47656E65 		.ascii	"Generated_Source\\PSoC5\\Servo_Controller.c\000"
 1432      72617465 
 1432      645F536F 
 1432      75726365 
 1432      5C50536F 
 1433              	.LASF34:
 1434 0355 72657375 		.ascii	"result\000"
 1434      6C7400
 1435              	.LASF33:
 1436 035c 53657276 		.ascii	"Servo_Controller_Init\000"
 1436      6F5F436F 
 1436      6E74726F 
 1436      6C6C6572 
 1436      5F496E69 
 1437              	.LASF22:
 1438 0372 53657276 		.ascii	"Servo_Controller_WriteCompare1\000"
 1438      6F5F436F 
 1438      6E74726F 
 1438      6C6C6572 
 1438      5F577269 
 1439              	.LASF24:
 1440 0391 53657276 		.ascii	"Servo_Controller_WriteCompare2\000"
 1440      6F5F436F 
 1440      6E74726F 
 1440      6C6C6572 
 1440      5F577269 
 1441              	.LASF15:
 1442 03b0 73697A65 		.ascii	"sizetype\000"
 1442      74797065 
 1442      00
 1443              	.LASF6:
 1444 03b9 6C6F6E67 		.ascii	"long long int\000"
 1444      206C6F6E 
 1444      6720696E 
 1444      7400
 1445              	.LASF25:
 1446 03c7 53657276 		.ascii	"Servo_Controller_SetInterruptMode\000"
 1446      6F5F436F 
 1446      6E74726F 
 1446      6C6C6572 
 1446      5F536574 
 1447              	.LASF26:
 1448 03e9 696E7465 		.ascii	"interruptMode\000"
 1448      72727570 
 1448      744D6F64 
 1448      6500
 1449              	.LASF27:
 1450 03f7 53657276 		.ascii	"Servo_Controller_ReadCounter\000"
 1450      6F5F436F 
 1450      6E74726F 
 1450      6C6C6572 
 1450      5F526561 
 1451              	.LASF2:
 1452 0414 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\Alex\AppData\Local\Temp\ccmr7bML.s 			page 45


 1452      7420696E 
 1452      7400
 1453              	.LASF35:
 1454 041e 6374726C 		.ascii	"ctrl\000"
 1454      00
 1455              	.LASF4:
 1456 0423 6C6F6E67 		.ascii	"long int\000"
 1456      20696E74 
 1456      00
 1457              	.LASF11:
 1458 042c 63686172 		.ascii	"char\000"
 1458      00
 1459              	.LASF14:
 1460 0431 6C6F6E67 		.ascii	"long double\000"
 1460      20646F75 
 1460      626C6500 
 1461              	.LASF0:
 1462 043d 7369676E 		.ascii	"signed char\000"
 1462      65642063 
 1462      68617200 
 1463              	.LASF23:
 1464 0449 636F6D70 		.ascii	"compare\000"
 1464      61726500 
 1465              	.LASF17:
 1466 0451 53657276 		.ascii	"Servo_Controller_Stop\000"
 1466      6F5F436F 
 1466      6E74726F 
 1466      6C6C6572 
 1466      5F53746F 
 1467              	.LASF16:
 1468 0467 53657276 		.ascii	"Servo_Controller_Enable\000"
 1468      6F5F436F 
 1468      6E74726F 
 1468      6C6C6572 
 1468      5F456E61 
 1469              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
